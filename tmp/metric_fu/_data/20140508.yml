---
:cane:
  :total_violations: 29
  :violations:
    :line_style:
    - :line: spec/bin/stats_spec.rb:26
      :description: Line is >80 characters (83)
    - :line: spec/lib/batboy_spec.rb:56
      :description: Line is >80 characters (92)
    - :line: spec/lib/batboy_spec.rb:77
      :description: Line is >80 characters (94)
    - :line: spec/lib/batboy_spec.rb:89
      :description: Line is >80 characters (120)
    - :line: spec/lib/batboy_spec.rb:96
      :description: Line is >80 characters (123)
    - :line: spec/lib/batboy_spec.rb:102
      :description: Line is >80 characters (85)
    - :line: spec/lib/batboy_spec.rb:103
      :description: Line is >80 characters (83)
    - :line: spec/lib/batter_spec.rb:18
      :description: Line is >80 characters (82)
    - :line: spec/lib/batter_spec.rb:64
      :description: Line is >80 characters (83)
    - :line: spec/lib/batter_spec.rb:74
      :description: Line is >80 characters (96)
    - :line: spec/lib/batter_spec.rb:84
      :description: Line is >80 characters (92)
    - :line: spec/lib/batter_spec.rb:250
      :description: Line is >80 characters (81)
    - :line: spec/lib/batting_data_spec.rb:18
      :description: Line is >80 characters (85)
    - :line: spec/lib/batting_data_spec.rb:24
      :description: Line is >80 characters (86)
    - :line: spec/lib/batting_data_spec.rb:31
      :description: Line is >80 characters (124)
    - :line: spec/lib/stats_grinder_spec.rb:9
      :description: Line is >80 characters (85)
    - :line: spec/lib/stats_grinder_spec.rb:16
      :description: Line is >80 characters (85)
    - :line: spec/lib/stats_grinder_spec.rb:22
      :description: Line is >80 characters (93)
    - :line: spec/lib/stats_grinder_spec.rb:23
      :description: Line is >80 characters (176)
    - :line: spec/lib/stats_grinder_spec.rb:24
      :description: Line is >80 characters (197)
    - :line: spec/lib/stats_grinder_spec.rb:27
      :description: Line is >80 characters (91)
    - :line: spec/lib/stats_grinder_spec.rb:28
      :description: Line is >80 characters (84)
    - :line: spec/lib/stats_grinder_spec.rb:32
      :description: Line is >80 characters (121)
    - :line: spec/lib/stats_grinder_spec.rb:33
      :description: Line is >80 characters (84)
    - :line: spec/lib/stats_grinder_spec.rb:38
      :description: Line is >80 characters (174)
    - :line: spec/lib/stats_grinder_spec.rb:39
      :description: Line is >80 characters (180)
    - :line: spec/lib/stats_grinder_spec.rb:40
      :description: Line is >80 characters (177)
    - :line: spec/lib/stats_grinder_spec.rb:44
      :description: Line is >80 characters (91)
    - :line: spec/lib/stats_grinder_spec.rb:45
      :description: Line is >80 characters (81)
:churn:
  :changes:
  - :file_path: lib/batter.rb
    :times_changed: 11
  :class_churn:
  - klass:
      file: lib/batboy.rb
      klass: Batboy
    times_changed: 1
  - klass:
      file: lib/batting_data.rb
      klass: BattingData
    times_changed: 1
  :method_churn:
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#initialize
    times_changed: 1
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#batting_average
    times_changed: 1
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#slugging_percentage
    times_changed: 1
  - method:
      file: lib/batting_data.rb
      klass: BattingData
      method: BattingData#+
    times_changed: 1
  :changed_files:
  - spec/spec_helper.rb
  :changed_classes: []
  :changed_methods: []
:flay:
  :total_score: '70'
  :matches:
  - :reason: 1) Similar code found in :call (mass = 38)
    :matches:
    - :name: lib/batter.rb
      :line: '106'
    - :name: lib/batter.rb
      :line: '112'
  - :reason: 2) Similar code found in :call (mass = 32)
    :matches:
    - :name: lib/batting_data.rb
      :line: '7'
    - :name: lib/batting_data.rb
      :line: |-
        11
        ERRORS
:flog:
  :total: 414.66969476246527
  :average: 8.293393895249306
  :method_containers:
  - :name: BattingData
    :path: lib/batting_data.rb
    :total_score: 88.0111579230515
    :highest_score: 23.99187362420869
    :average_score: 12.573022560435929
    :methods:
      BattingData#+:
        :operators:
          :assignment: 4.600000000000002
          :branch: 3.4000000000000017
          :each_with_object: 2.200000000000001
          :send: 16.20000000000001
          :integrable_stats: 1.3000000000000005
          :+: 1.2000000000000006
          :merge: 1.3000000000000005
          :new: 1.1000000000000005
        :score: 23.99187362420869
        :path: lib/batting_data.rb:44
      BattingData#initialize:
        :operators:
          :assignment: 7.700000000000004
          :fetch: 1.1000000000000005
          :player_id: 1.3000000000000005
          :find: 1.1000000000000005
          :[]: 5.100000000000002
          :to_i: 2.500000000000001
          :branch: 1.1000000000000005
          :integrable_stats: 1.3000000000000005
          :each: 1.1000000000000005
          :send: 3.600000000000002
        :score: 18.785898967044414
        :path: lib/batting_data.rb:16
      BattingData#bases_advanced:
        :operators:
          :singles: 1.7000000000000004
          :lit_fixnum: 1.2750000000000004
          :doubles: 1.9000000000000006
          :*: 4.500000000000002
          :+: 3.900000000000002
          :triples: 1.7000000000000006
          :home_runs: 1.5000000000000007
        :score: 16.47500000000001
        :path: lib/batting_data.rb:60
      BattingData#singles:
        :operators:
          :hits: 1.3000000000000007
          :doubles: 1.7000000000000006
          :triples: 1.7000000000000006
          :+: 2.8000000000000016
          :home_runs: 1.5000000000000007
          :-: 1.1000000000000008
        :score: 10.100000000000005
        :path: lib/batting_data.rb:64
      BattingData#slugging_percentage:
        :operators:
          :branch: 1.1000000000000005
          :at_bats: 2.8000000000000007
          :>: 1.1000000000000005
          :bases_advanced: 1.3000000000000005
          :to_f: 1.3000000000000005
          :/: 1.1000000000000005
        :score: 7.679192665899199
        :path: lib/batting_data.rb:37
      BattingData#batting_average:
        :operators:
          :branch: 1.1000000000000005
          :at_bats: 2.8000000000000007
          :>: 1.1000000000000005
          :hits: 1.3000000000000005
          :to_f: 1.3000000000000005
          :/: 1.1000000000000005
        :score: 7.679192665899199
        :path: lib/batting_data.rb:32
      BattingData#none:
        :operators:
          :attr_reader: 1.1000000000000005
          :private_attr_writer: 1.1000000000000005
          :private: 1.1000000000000005
        :score: 3.3000000000000016
        :path: 
  - :name: Batboy
    :path: lib/batboy.rb
    :total_score: 55.83739711044238
    :highest_score: 23.209480821422957
    :average_score: 9.306232851740397
    :methods:
      Batboy#report_slugging_percentage_roster_for:
        :operators:
          :ostream: 4.0
          :puts: 3.4000000000000004
          :assignment: 2.2
          :stats_grinder: 1.3
          :team_members_for_year: 1.1
          :branch: 2.2
          :map: 1.1
          :stats_for_year: 1.4000000000000001
          :slugging_percentage: 1.2000000000000002
          :block_pass: 1.5
          :to_proc_normal: 1.5
          :sort_by: 1.3
          :reverse: 1.1
          :each: 1.1
          :name: 1.6
          :%: 1.4000000000000001
        :score: 23.209480821422957
        :path: lib/batboy.rb:44
      Batboy#report_most_improved_batter_in:
        :operators:
          :assignment: 4.4
          :lit_fixnum: 0.325
          :-: 1.1
          :ostream: 3.9000000000000004
          :puts: 3.3000000000000003
          :stats_grinder: 1.3
          :most_improved_batter: 1.1
          :name: 1.3
        :score: 13.086849315247731
        :path: lib/batboy.rb:36
      Batboy#report_triple_crown_winner_in_league_for:
        :operators:
          :ostream: 4.1000000000000005
          :puts: 3.5000000000000004
          :branch: 1.1
          :assignment: 1.1
          :stats_grinder: 1.3
          :triple_crown_winner_in_league_for: 1.1
          :name: 1.4000000000000001
        :score: 11.50565078559227
        :path: lib/batboy.rb:57
      Batboy#initialize:
        :operators:
          :assignment: 4.4
          :new: 1.1
        :score: 4.535416188179427
        :path: lib/batboy.rb:10
      Batboy#report_all_done:
        :operators:
          :ostream: 1.3
          :puts: 1.1
        :score: 2.4000000000000004
        :path: lib/batboy.rb:22
      Batboy#none:
        :operators:
          :private_attr_reader: 1.1
        :score: 1.1
        :path: 
  - :name: Batter::load_batter_data
    :path: lib/batter.rb
    :total_score: 22.61725005388587
    :highest_score: 22.61725005388587
    :average_score: 22.61725005388587
    :methods:
      Batter::load_batter_data:
        :operators:
          :assignment: 2.7000000000000006
          :branch: 4.5
          :new: 3.7000000000000006
          :all: 1.9000000000000001
          :reject: 1.7000000000000002
          :[]: 7.400000000000002
          :nil?: 1.8000000000000005
          :map: 1.5000000000000004
          :each_with_object: 1.3000000000000005
          :id: 1.4000000000000006
          :load_batting_data: 1.3000000000000005
        :score: 22.61725005388587
        :path: lib/batter.rb:127
  - :name: Batter
    :path: lib/batter.rb
    :total_score: 103.79170628960799
    :highest_score: 22.000000000000004
    :average_score: 6.919447085973866
    :methods:
      Batter#none:
        :operators:
          :extend: 2.2
          :attr_reader: 1.1
          :private_attr_reader: 1.1
          :def_delegators: 1.1
          :private: 1.1
          :private_class_method: 15.400000000000004
        :score: 22.000000000000004
        :path: 
      Batter#stats_for_league_and_year:
        :operators:
          :branch: 3.4000000000000004
          :batting_data: 6.300000000000001
          :key?: 2.5000000000000004
          :[]: 5.6000000000000005
          :all_batting_data_for_year: 1.1
        :score: 15.868522300453815
        :path: lib/batter.rb:64
      Batter#initialize:
        :operators:
          :assignment: 9.4
          :branch: 3.6000000000000005
          :new: 5.000000000000001
        :score: 11.239217054581696
        :path: lib/batter.rb:14
      Batter#played_any_games_for_team_in_year?:
        :operators:
          :branch: 2.300000000000001
          :played_any_games?: 1.2000000000000006
          :batting_data: 1.6000000000000005
          :[]: 1.4000000000000006
          :any?: 1.2000000000000006
          :keys: 1.5000000000000007
          :include?: 1.3000000000000007
        :score: 8.516454661418685
        :path: lib/batter.rb:201
      Batter#played_any_games_in_league_in_year?:
        :operators:
          :branch: 2.300000000000001
          :played_any_games?: 1.2000000000000006
          :batting_data: 1.6000000000000005
          :[]: 1.4000000000000006
          :any?: 1.2000000000000006
          :==: 1.3000000000000007
        :score: 7.083784299369938
        :path: lib/batter.rb:207
      Batter#add_batting_data:
        :operators:
          :year: 1.5
          :[]: 2.4000000000000004
          :league: 1.3
          :team: 1.1
        :score: 6.300000000000001
        :path: lib/batter.rb:89
      Batter#all_batting_data_ever:
        :operators:
          :branch: 1.3000000000000005
          :batting_data: 1.5000000000000004
          :map: 1.3000000000000005
          :all_batting_data_for_year: 1.4000000000000006
          :reduce: 1.1000000000000005
        :score: 5.457105459856903
        :path: lib/batter.rb:215
      Batter#played_any_games?:
        :operators:
          :branch: 3.3000000000000003
          :played_any_games_in_year?: 1.2000000000000002
          :played_any_games_in_league_in_year?: 1.2000000000000002
          :played_any_games_for_team_in_year?: 1.1
        :score: 4.810405388322279
        :path: lib/batter.rb:74
      Batter#all_batting_data_for_year:
        :operators:
          :branch: 1.3000000000000005
          :map: 1.3000000000000005
          :all_batting_data_for_league: 1.4000000000000006
          :reduce: 1.1000000000000005
        :score: 4.016217125604642
        :path: lib/batter.rb:224
      Batter#stats_for_year:
        :operators:
          :batting_data: 1.5
          :[]: 1.3
          :all_batting_data_for_year: 1.1
        :score: 3.9
        :path: lib/batter.rb:60
      Batter#name:
        :operators:
          :first_name: 1.3
          :last_name: 1.3
          :%: 1.1
        :score: 3.7
        :path: lib/batter.rb:48
      Batter#sortable_name:
        :operators:
          :last_name: 1.3
          :first_name: 1.3
          :%: 1.1
        :score: 3.7
        :path: lib/batter.rb:52
      Batter#played_any_games_in_year?:
        :operators:
          :years: 1.3000000000000005
          :include?: 1.1000000000000005
        :score: 2.4000000000000012
        :path: lib/batter.rb:197
      Batter#all_batting_data_for_league:
        :operators:
          :values: 1.3000000000000005
          :reduce: 1.1000000000000005
        :score: 2.4000000000000012
        :path: lib/batter.rb:233
      Batter#years:
        :operators:
          :batting_data: 1.3
          :keys: 1.1
        :score: 2.4000000000000004
        :path: lib/batter.rb:56
  - :name: StatsGrinder
    :path: lib/stats_grinder.rb
    :total_score: 62.587025588582826
    :highest_score: 17.521130100538617
    :average_score: 6.9541139542869805
    :methods:
      StatsGrinder#triple_crown_winner_in_league_for:
        :operators:
          :assignment: 5.500000000000003
          :find_all: 1.1000000000000005
          :with_at_least_400_at_bats_in_league: 1.1000000000000005
          :branch: 5.500000000000003
          :max_by: 3.3000000000000016
          :stats_for_league_and_year: 4.200000000000002
          :home_runs: 1.2000000000000006
          :runs_batted_in: 1.2000000000000006
          :batting_average: 1.2000000000000006
          :==: 2.4000000000000012
        :score: 17.521130100538617
        :path: lib/stats_grinder.rb:34
      StatsGrinder#common_batters:
        :operators:
          :assignment: 1.1000000000000005
          :block_pass: 1.3000000000000005
          :to_proc_normal: 1.3000000000000005
          :map: 1.1000000000000005
          :branch: 1.1000000000000005
          :reject: 1.1000000000000005
          :id: 1.6000000000000005
          :include?: 1.4000000000000006
          :!: 1.2000000000000006
        :score: 9.133454987024356
        :path: lib/stats_grinder.rb:91
      StatsGrinder#most_improved_batter:
        :operators:
          :assignment: 5.500000000000003
          :find_all: 2.200000000000001
          :with_at_least_200_at_bats: 2.200000000000001
          :common_batters: 1.1000000000000005
          :most_improved: 1.1000000000000005
        :score: 8.591274643497323
        :path: lib/stats_grinder.rb:16
      StatsGrinder#batter_improvement:
        :operators:
          :assignment: 4.400000000000002
          :stats_for_year: 2.600000000000001
          :batting_average: 2.200000000000001
          :-: 1.1000000000000005
        :score: 7.360027173862883
        :path: lib/stats_grinder.rb:73
      StatsGrinder#most_improved:
        :operators:
          :assignment: 1.1000000000000005
          :branch: 2.8000000000000007
          :map: 1.5000000000000004
          :batter_improvement: 1.6000000000000005
          :max_by: 1.3000000000000005
          :first: 1.1000000000000005
        :score: 6.268971207462994
        :path: lib/stats_grinder.rb:99
      StatsGrinder#with_at_least_200_at_bats:
        :operators:
          :branch: 1.1000000000000005
          :reject: 1.1000000000000005
          :stats_for_year: 1.6000000000000005
          :at_bats: 1.4000000000000006
          :lit_fixnum: 0.35000000000000014
          :<: 1.2000000000000006
        :score: 5.7560837380983285
        :path: lib/stats_grinder.rb:80
      StatsGrinder#with_at_least_400_at_bats_in_league:
        :operators:
          :branch: 1.1000000000000005
          :reject: 1.1000000000000005
          :stats_for_league_and_year: 1.6000000000000005
          :at_bats: 1.4000000000000006
          :lit_fixnum: 0.35000000000000014
          :<: 1.2000000000000006
        :score: 5.7560837380983285
        :path: lib/stats_grinder.rb:84
      StatsGrinder#none:
        :operators:
          :private: 1.1000000000000005
        :score: 1.1000000000000005
        :path: 
      StatsGrinder#team_members_for_year:
        :operators:
          :find_all: 1.1000000000000005
        :score: 1.1000000000000005
        :path: lib/stats_grinder.rb:30
  - :name: Batter::load_batting_data
    :path: lib/batter.rb
    :total_score: 16.63309953075494
    :highest_score: 16.63309953075494
    :average_score: 16.63309953075494
    :methods:
      Batter::load_batting_data:
        :operators:
          :branch: 2.800000000000001
          :new: 3.4000000000000012
          :all: 1.5000000000000004
          :map: 1.3000000000000005
          :assignment: 3.1000000000000014
          :batting_data_keys: 1.7000000000000006
          :each_pair: 1.5000000000000007
          :[]: 3.5000000000000013
          :find: 1.7000000000000006
          :add_batting_data: 1.5000000000000007
        :score: 16.63309953075494
        :path: lib/batter.rb:186
  - :name: Batter::find_all_by_year
    :path: lib/batter.rb
    :total_score: 11.00272693471941
    :highest_score: 11.00272693471941
    :average_score: 11.00272693471941
    :methods:
      Batter::find_all_by_year:
        :operators:
          :branch: 1.5
          :batter_data: 1.7
          :reject: 1.5
          :played_any_games?: 1.8
          :!: 1.6
          :block_pass: 1.5
          :to_proc_normal: 1.5
          :map: 1.3
        :score: 11.00272693471941
        :path: lib/batter.rb:100
  - :name: Batter::find_all_by_league_and_year
    :path: lib/batter.rb
    :total_score: 11.00272693471941
    :highest_score: 11.00272693471941
    :average_score: 11.00272693471941
    :methods:
      Batter::find_all_by_league_and_year:
        :operators:
          :branch: 1.5
          :batter_data: 1.7
          :reject: 1.5
          :played_any_games?: 1.8
          :!: 1.6
          :block_pass: 1.5
          :to_proc_normal: 1.5
          :map: 1.3
        :score: 11.00272693471941
        :path: lib/batter.rb:112
  - :name: Batter::find_all_by_team_and_year
    :path: lib/batter.rb
    :total_score: 11.00272693471941
    :highest_score: 11.00272693471941
    :average_score: 11.00272693471941
    :methods:
      Batter::find_all_by_team_and_year:
        :operators:
          :branch: 1.5
          :batter_data: 1.7
          :reject: 1.5
          :played_any_games?: 1.8
          :!: 1.6
          :block_pass: 1.5
          :to_proc_normal: 1.5
          :map: 1.3
        :score: 11.00272693471941
        :path: lib/batter.rb:106
  - :name: main
    :path: ''
    :total_score: 10.900000000000002
    :highest_score: 10.900000000000002
    :average_score: 10.900000000000002
    :methods:
      main#none:
        :operators:
          :require_relative: 9.8
          :require: 1.1000000000000008
        :score: 10.900000000000002
        :path: 
  - :name: Batter::find_all
    :path: lib/batter.rb
    :total_score: 9.928242543370907
    :highest_score: 9.928242543370907
    :average_score: 9.928242543370907
    :methods:
      Batter::find_all:
        :operators:
          :branch: 4.4
          :batter_data: 1.4000000000000001
          :block_pass: 1.4000000000000001
          :to_proc_normal: 1.4000000000000001
          :map: 1.2000000000000002
          :find_all_by_year: 1.2000000000000002
          :find_all_by_league_and_year: 1.2000000000000002
          :find_all_by_team_and_year: 1.1
        :score: 9.928242543370907
        :path: lib/batter.rb:40
  - :name: Batter::first
    :path: lib/batter.rb
    :total_score: 3.9
    :highest_score: 3.9
    :average_score: 3.9
    :methods:
      Batter::first:
        :operators:
          :batter_data: 1.5
          :first: 1.3
          :last: 1.1
        :score: 3.9
        :path: lib/batter.rb:32
  - :name: Batter::find
    :path: lib/batter.rb
    :total_score: 2.4000000000000004
    :highest_score: 2.4000000000000004
    :average_score: 2.4000000000000004
    :methods:
      Batter::find:
        :operators:
          :batter_data: 1.3
          :fetch: 1.1
        :score: 2.4000000000000004
        :path: lib/batter.rb:36
  - :name: CsvReader
    :path: lib/csv_reader.rb
    :total_score: 3.755634918610406
    :highest_score: 1.5556349186104053
    :average_score: 1.2518783062034686
    :methods:
      CsvReader#data:
        :operators:
          :assignment: 1.1000000000000005
          :read: 1.1000000000000005
        :score: 1.5556349186104053
        :path: lib/csv_reader.rb:13
      CsvReader#initialize:
        :operators:
          :assignment: 1.1000000000000005
        :score: 1.1000000000000005
        :path: lib/csv_reader.rb:5
      CsvReader#all:
        :operators:
          :data: 1.1000000000000005
        :score: 1.1000000000000005
        :path: lib/csv_reader.rb:9
  - :name: Batter::batter_data
    :path: lib/batter.rb
    :total_score: 1.3
    :highest_score: 1.3
    :average_score: 1.3
    :methods:
      Batter::batter_data:
        :operators:
          :load_batter_data: 1.3
        :score: 1.3
        :path: lib/batter.rb:120
:stats:
  :codeLOC: 301
  :testLOC: 425
  :code_to_test_ratio: 1.4
  :lines:
  - :name: Libraries
    :lines: 492
    :loc: 301
    :classes: 5
    :methods: 39
    :methods_per_class: 7
    :loc_per_method: 5
  - :name: Bin specs
    :lines: 55
    :loc: 39
    :classes: 0
    :methods: 0
    :methods_per_class: 0
    :loc_per_method: 0
  - :name: Lib specs
    :lines: 498
    :loc: 386
    :classes: 0
    :methods: 1
    :methods_per_class: 0
    :loc_per_method: 384
  - :name: Total
    :lines: 1045
    :loc: 726
    :classes: 5
    :methods: 40
    :methods_per_class: 8
    :loc_per_method: 16
:saikuro:
  :files:
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: Batter
      :complexity: 45
      :lines: 231
      :methods:
      - :name: Batter#initialize
        :complexity: 4
        :lines: 9
      - :name: Batter#self.find_all
        :complexity: 4
        :lines: 6
      - :name: Batter#self.load_batter_data
        :complexity: 4
        :lines: 18
      - :name: Batter#played_any_games?
        :complexity: 3
        :lines: 4
      - :name: Batter#self.load_batting_data
        :complexity: 3
        :lines: 9
      - :name: Batter#self.find_all_by_team_and_year
        :complexity: 2
        :lines: 4
      - :name: Batter#played_any_games_for_team_in_year?
        :complexity: 2
        :lines: 4
      - :name: Batter#all_batting_data_for_year
        :complexity: 2
        :lines: 4
      - :name: Batter#played_any_games_in_league_in_year?
        :complexity: 2
        :lines: 4
      - :name: Batter#stats_for_league_and_year
        :complexity: 2
        :lines: 8
      - :name: Batter#self.find_all_by_league_and_year
        :complexity: 2
        :lines: 4
      - :name: Batter#self.find_all_by_year
        :complexity: 2
        :lines: 4
      - :name: Batter#all_batting_data_ever
        :complexity: 2
        :lines: 4
      - :name: Batter#add_batting_data
        :complexity: 1
        :lines: 2
      - :name: Batter#played_any_games_in_year?
        :complexity: 1
        :lines: 2
      - :name: Batter#self.batter_data
        :complexity: 1
        :lines: 2
      - :name: Batter#stats_for_year
        :complexity: 1
        :lines: 2
      - :name: Batter#years
        :complexity: 1
        :lines: 2
      - :name: Batter#sortable_name
        :complexity: 1
        :lines: 2
      - :name: Batter#name
        :complexity: 1
        :lines: 2
      - :name: Batter#self.batting_data_keys
        :complexity: 1
        :lines: 16
      - :name: Batter#self.find
        :complexity: 1
        :lines: 2
      - :name: Batter#self.first
        :complexity: 1
        :lines: 2
      - :name: Batter#all_batting_data_for_league
        :complexity: 1
        :lines: 5
    :filename: lib/batter.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: StatsGrinder
      :complexity: 17
      :lines: 89
      :methods:
      - :name: StatsGrinder#triple_crown_winner_in_league_for
        :complexity: 5
        :lines: 24
      - :name: StatsGrinder#most_improved
        :complexity: 3
        :lines: 4
      - :name: StatsGrinder#with_at_least_200_at_bats
        :complexity: 2
        :lines: 2
      - :name: StatsGrinder#with_at_least_400_at_bats_in_league
        :complexity: 2
        :lines: 4
      - :name: StatsGrinder#common_batters
        :complexity: 2
        :lines: 3
      - :name: StatsGrinder#batter_improvement
        :complexity: 1
        :lines: 5
      - :name: StatsGrinder#team_members_for_year
        :complexity: 1
        :lines: 2
      - :name: StatsGrinder#most_improved_batter
        :complexity: 1
        :lines: 9
    :filename: lib/stats_grinder.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: BattingData
      :complexity: 12
      :lines: 62
      :methods:
      - :name: BattingData#+
        :complexity: 3
        :lines: 12
      - :name: BattingData#batting_average
        :complexity: 2
        :lines: 3
      - :name: BattingData#initialize
        :complexity: 2
        :lines: 7
      - :name: BattingData#slugging_percentage
        :complexity: 2
        :lines: 3
      - :name: BattingData#bases_advanced
        :complexity: 1
        :lines: 2
      - :name: BattingData#integrable_stats
        :complexity: 1
        :lines: 5
      - :name: BattingData#singles
        :complexity: 1
        :lines: 2
    :filename: lib/batting_data.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: Batboy
      :complexity: 8
      :lines: 58
      :methods:
      - :name: Batboy#report_slugging_percentage_roster_for
        :complexity: 3
        :lines: 11
      - :name: Batboy#report_triple_crown_winner_in_league_for
        :complexity: 2
        :lines: 7
      - :name: Batboy#report_most_improved_batter_in
        :complexity: 1
        :lines: 6
      - :name: Batboy#report_all_done
        :complexity: 1
        :lines: 2
      - :name: Batboy#initialize
        :complexity: 1
        :lines: 3
    :filename: lib/batboy.rb
  - :classes:
    - :class_name: ''
      :complexity: 0
      :lines: 1
      :methods: []
    - :class_name: CsvReader
      :complexity: 3
      :lines: 12
      :methods:
      - :name: CsvReader#data
        :complexity: 1
        :lines: 2
      - :name: CsvReader#all
        :complexity: 1
        :lines: 2
      - :name: CsvReader#initialize
        :complexity: 1
        :lines: 2
    :filename: lib/csv_reader.rb
  :classes:
  - :name: Batter
    :complexity: 45
    :lines: 231
    :defs:
    - :name: Batter#initialize
      :complexity: 4
      :lines: 9
    - :name: Batter#self.first
      :complexity: 1
      :lines: 2
    - :name: Batter#self.find
      :complexity: 1
      :lines: 2
    - :name: Batter#self.find_all
      :complexity: 4
      :lines: 6
    - :name: Batter#name
      :complexity: 1
      :lines: 2
    - :name: Batter#sortable_name
      :complexity: 1
      :lines: 2
    - :name: Batter#years
      :complexity: 1
      :lines: 2
    - :name: Batter#stats_for_year
      :complexity: 1
      :lines: 2
    - :name: Batter#stats_for_league_and_year
      :complexity: 2
      :lines: 8
    - :name: Batter#played_any_games?
      :complexity: 3
      :lines: 4
    - :name: Batter#add_batting_data
      :complexity: 1
      :lines: 2
    - :name: Batter#self.find_all_by_year
      :complexity: 2
      :lines: 4
    - :name: Batter#self.find_all_by_team_and_year
      :complexity: 2
      :lines: 4
    - :name: Batter#self.find_all_by_league_and_year
      :complexity: 2
      :lines: 4
    - :name: Batter#self.batter_data
      :complexity: 1
      :lines: 2
    - :name: Batter#self.load_batter_data
      :complexity: 4
      :lines: 18
    - :name: Batter#self.batting_data_keys
      :complexity: 1
      :lines: 16
    - :name: Batter#self.load_batting_data
      :complexity: 3
      :lines: 9
    - :name: Batter#played_any_games_in_year?
      :complexity: 1
      :lines: 2
    - :name: Batter#played_any_games_for_team_in_year?
      :complexity: 2
      :lines: 4
    - :name: Batter#played_any_games_in_league_in_year?
      :complexity: 2
      :lines: 4
    - :name: Batter#all_batting_data_ever
      :complexity: 2
      :lines: 4
    - :name: Batter#all_batting_data_for_year
      :complexity: 2
      :lines: 4
    - :name: Batter#all_batting_data_for_league
      :complexity: 1
      :lines: 5
  - :name: StatsGrinder
    :complexity: 17
    :lines: 89
    :defs:
    - :name: StatsGrinder#most_improved_batter
      :complexity: 1
      :lines: 9
    - :name: StatsGrinder#team_members_for_year
      :complexity: 1
      :lines: 2
    - :name: StatsGrinder#triple_crown_winner_in_league_for
      :complexity: 5
      :lines: 24
    - :name: StatsGrinder#batter_improvement
      :complexity: 1
      :lines: 5
    - :name: StatsGrinder#with_at_least_200_at_bats
      :complexity: 2
      :lines: 2
    - :name: StatsGrinder#with_at_least_400_at_bats_in_league
      :complexity: 2
      :lines: 4
    - :name: StatsGrinder#common_batters
      :complexity: 2
      :lines: 3
    - :name: StatsGrinder#most_improved
      :complexity: 3
      :lines: 4
  - :name: BattingData
    :complexity: 12
    :lines: 62
    :defs:
    - :name: BattingData#initialize
      :complexity: 2
      :lines: 7
    - :name: BattingData#integrable_stats
      :complexity: 1
      :lines: 5
    - :name: BattingData#batting_average
      :complexity: 2
      :lines: 3
    - :name: BattingData#slugging_percentage
      :complexity: 2
      :lines: 3
    - :name: BattingData#+
      :complexity: 3
      :lines: 12
    - :name: BattingData#bases_advanced
      :complexity: 1
      :lines: 2
    - :name: BattingData#singles
      :complexity: 1
      :lines: 2
  - :name: Batboy
    :complexity: 8
    :lines: 58
    :defs:
    - :name: Batboy#initialize
      :complexity: 1
      :lines: 3
    - :name: Batboy#report_all_done
      :complexity: 1
      :lines: 2
    - :name: Batboy#report_most_improved_batter_in
      :complexity: 1
      :lines: 6
    - :name: Batboy#report_slugging_percentage_roster_for
      :complexity: 3
      :lines: 11
    - :name: Batboy#report_triple_crown_winner_in_league_for
      :complexity: 2
      :lines: 7
  - :name: CsvReader
    :complexity: 3
    :lines: 12
    :defs:
    - :name: CsvReader#initialize
      :complexity: 1
      :lines: 2
    - :name: CsvReader#all
      :complexity: 1
      :lines: 2
    - :name: CsvReader#data
      :complexity: 1
      :lines: 2
  - :name: ''
    :complexity: 0
    :lines: 1
  - :name: ''
    :complexity: 0
    :lines: 1
  - :name: ''
    :complexity: 0
    :lines: 1
  - :name: ''
    :complexity: 0
    :lines: 1
  - :name: ''
    :complexity: 0
    :lines: 1
  :methods:
  - :name: StatsGrinder#triple_crown_winner_in_league_for
    :complexity: 5
    :lines: 24
  - :name: Batter#self.find_all
    :complexity: 4
    :lines: 6
  - :name: Batter#initialize
    :complexity: 4
    :lines: 9
  - :name: Batter#self.load_batter_data
    :complexity: 4
    :lines: 18
  - :name: StatsGrinder#most_improved
    :complexity: 3
    :lines: 4
  - :name: Batter#played_any_games?
    :complexity: 3
    :lines: 4
  - :name: Batter#self.load_batting_data
    :complexity: 3
    :lines: 9
  - :name: BattingData#+
    :complexity: 3
    :lines: 12
  - :name: Batboy#report_slugging_percentage_roster_for
    :complexity: 3
    :lines: 11
  - :name: BattingData#slugging_percentage
    :complexity: 2
    :lines: 3
  - :name: Batter#self.find_all_by_team_and_year
    :complexity: 2
    :lines: 4
  - :name: Batter#self.find_all_by_league_and_year
    :complexity: 2
    :lines: 4
  - :name: BattingData#batting_average
    :complexity: 2
    :lines: 3
  - :name: Batter#self.find_all_by_year
    :complexity: 2
    :lines: 4
  - :name: BattingData#initialize
    :complexity: 2
    :lines: 7
  - :name: Batboy#report_triple_crown_winner_in_league_for
    :complexity: 2
    :lines: 7
  - :name: StatsGrinder#common_batters
    :complexity: 2
    :lines: 3
  - :name: StatsGrinder#with_at_least_400_at_bats_in_league
    :complexity: 2
    :lines: 4
  - :name: StatsGrinder#with_at_least_200_at_bats
    :complexity: 2
    :lines: 2
  - :name: Batter#played_any_games_for_team_in_year?
    :complexity: 2
    :lines: 4
  - :name: Batter#stats_for_league_and_year
    :complexity: 2
    :lines: 8
  - :name: Batter#played_any_games_in_league_in_year?
    :complexity: 2
    :lines: 4
  - :name: Batter#all_batting_data_ever
    :complexity: 2
    :lines: 4
  - :name: Batter#all_batting_data_for_year
    :complexity: 2
    :lines: 4
  - :name: Batter#all_batting_data_for_league
    :complexity: 1
    :lines: 5
  - :name: StatsGrinder#most_improved_batter
    :complexity: 1
    :lines: 9
  - :name: StatsGrinder#team_members_for_year
    :complexity: 1
    :lines: 2
  - :name: StatsGrinder#batter_improvement
    :complexity: 1
    :lines: 5
  - :name: Batter#played_any_games_in_year?
    :complexity: 1
    :lines: 2
  - :name: BattingData#integrable_stats
    :complexity: 1
    :lines: 5
  - :name: Batter#self.batting_data_keys
    :complexity: 1
    :lines: 16
  - :name: BattingData#bases_advanced
    :complexity: 1
    :lines: 2
  - :name: Batter#self.batter_data
    :complexity: 1
    :lines: 2
  - :name: BattingData#singles
    :complexity: 1
    :lines: 2
  - :name: Batboy#initialize
    :complexity: 1
    :lines: 3
  - :name: Batboy#report_all_done
    :complexity: 1
    :lines: 2
  - :name: Batter#add_batting_data
    :complexity: 1
    :lines: 2
  - :name: Batboy#report_most_improved_batter_in
    :complexity: 1
    :lines: 6
  - :name: CsvReader#initialize
    :complexity: 1
    :lines: 2
  - :name: Batter#stats_for_year
    :complexity: 1
    :lines: 2
  - :name: Batter#years
    :complexity: 1
    :lines: 2
  - :name: Batter#sortable_name
    :complexity: 1
    :lines: 2
  - :name: Batter#name
    :complexity: 1
    :lines: 2
  - :name: CsvReader#all
    :complexity: 1
    :lines: 2
  - :name: Batter#self.find
    :complexity: 1
    :lines: 2
  - :name: Batter#self.first
    :complexity: 1
    :lines: 2
  - :name: CsvReader#data
    :complexity: 1
    :lines: 2
:reek:
  :matches:
  - :file_path: lib/batboy.rb
    :code_smells:
    - :method: Batboy#report_slugging_percentage_roster_for
      :message: has approx 8 statements
      :type: TooManyStatements
  - :file_path: lib/batter.rb
    :code_smells:
    - :method: Batter
      :message: declares the class variable @@batter_data
      :type: ClassVariable
    - :method: Batter#add_batting_data
      :message: refers to bd more than self
      :type: FeatureEnvy
    - :method: Batter#all_batting_data_for_league
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: Batter#all_batting_data_for_league
      :message: refers to data more than self
      :type: FeatureEnvy
    - :method: Batter#initialize
      :message: contains iterators nested 3 deep
      :type: NestedIterators
    - :method: Batter#initialize
      :message: has the variable name 'hash2'
      :type: UncommunicativeVariableName
    - :method: Batter#initialize
      :message: has the variable name 'hash3'
      :type: UncommunicativeVariableName
    - :method: Batter#self.load_batter_data
      :message: calls row["playerID"] twice
      :type: DuplicateMethodCall
    - :method: Batter#self.load_batter_data
      :message: has approx 7 statements
      :type: TooManyStatements
    - :method: Batter#self.load_batter_data
      :message: performs a nil-check.
      :type: NilCheck
    - :method: Batter#self.load_batting_data
      :message: contains iterators nested 2 deep
      :type: NestedIterators
    - :method: Batter#stats_for_league_and_year
      :message: calls batting_data[year] 3 times
      :type: DuplicateMethodCall
  - :file_path: lib/batting_data.rb
    :code_smells:
    - :method: BattingData#+
      :message: calls other.send(key) twice
      :type: DuplicateMethodCall
    - :method: BattingData#+
      :message: calls send(key) twice
      :type: DuplicateMethodCall
  - :file_path: lib/stats_grinder.rb
    :code_smells:
    - :method: StatsGrinder#batter_improvement
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#batter_improvement
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#common_batters
      :message: has the parameter name 'batters1'
      :type: UncommunicativeParameterName
    - :method: StatsGrinder#common_batters
      :message: has the parameter name 'batters2'
      :type: UncommunicativeParameterName
    - :method: StatsGrinder#common_batters
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: refers to batter2_ids more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: refers to batters1 more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#common_batters
      :message: refers to batters2 more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#most_improved
      :message: has the variable name 'b'
      :type: UncommunicativeVariableName
    - :method: StatsGrinder#most_improved_batter
      :message: has approx 6 statements
      :type: TooManyStatements
    - :method: StatsGrinder#most_improved_batter
      :message: has the variable name 'batters1'
      :type: UncommunicativeVariableName
    - :method: StatsGrinder#most_improved_batter
      :message: has the variable name 'batters2'
      :type: UncommunicativeVariableName
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: calls batter.stats_for_league_and_year(league, year) 3 times
      :type: DuplicateMethodCall
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: calls contenders.max_by 3 times
      :type: DuplicateMethodCall
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: has approx 10 statements
      :type: TooManyStatements
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#triple_crown_winner_in_league_for
      :message: refers to contenders more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#with_at_least_200_at_bats
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#with_at_least_200_at_bats
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#with_at_least_200_at_bats
      :message: refers to batters more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#with_at_least_400_at_bats_in_league
      :message: doesn't depend on instance state
      :type: UtilityFunction
    - :method: StatsGrinder#with_at_least_400_at_bats_in_league
      :message: refers to batter more than self
      :type: FeatureEnvy
    - :method: StatsGrinder#with_at_least_400_at_bats_in_league
      :message: refers to batters more than self
      :type: FeatureEnvy
:roodi:
  :total:
  - 'ERRORS:'
  :problems: []
:rcov:
  "./lib/batboy.rb":
    :lines:
    - :content: require_relative "../patches/scoped_attr_accessors"
      :was_run: 1
    - :content: require_relative "stats_grinder"
      :was_run: 1
    - :content: "# Main Batboy Stats Reporting App"
      :was_run: 
    - :content: "# This is the app-loading and startup lib file. You should be able
        to"
      :was_run: 
    - :content: "# require 'batboy' and then do Batboy.new and get what you want."
      :was_run: 
    - :content: class Batboy
      :was_run: 1
    - :content: "  private_attr_reader :ostream, :stats_grinder"
      :was_run: 1
    - :content: "  def initialize(ostream=$stdout, stats_grinder=StatsGrinder.new)"
      :was_run: 1
    - :content: "    @ostream = ostream"
      :was_run: 1
    - :content: "    @stats_grinder = stats_grinder"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # Refactor me: do we want a factory here?"
      :was_run: 
    - :content: "  # e.g.:"
      :was_run: 
    - :content: "  # def self.build_batboy"
      :was_run: 
    - :content: "  #   new($stdout,"
      :was_run: 
    - :content: '  # StatsGrinder.new(StatsData.parse_csv("./data/Master-small.csv")))'
      :was_run: 
    - :content: "  # etc"
      :was_run: 
    - :content: "  def report_all_done"
      :was_run: 1
    - :content: '    ostream.puts "All done."'
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # refactor me: these will all have the same basic structure: display"
      :was_run: 
    - :content: "  # caption, get answer, display answer or default"
      :was_run: 
    - :content: "  # Note: StatsGrinder gives back nil or a batter name. There's no"
      :was_run: 
    - :content: "  # reason for Batboy to have access to Batter objects yet."
      :was_run: 
    - :content: "  #"
      :was_run: 
    - :content: "  # Refactor me: I don't like Batboy knowing that Batter has a"
      :was_run: 
    - :content: "  # name, but the alternative is to have Batter know how to write
        its"
      :was_run: 
    - :content: "  # name to a stream, e.g. batter.write_name_to(ostream). This is
        very"
      :was_run: 
    - :content: "  # Smalltalk-y, and might improve testability. Will think some on"
      :was_run: 
    - :content: "  # this."
      :was_run: 
    - :content: "  def report_most_improved_batter_in(year)"
      :was_run: 1
    - :content: "    from, to = year-1, year"
      :was_run: 1
    - :content: '    ostream.puts "Most improved batter #{from}->#{to}:"'
      :was_run: 1
    - :content: "    batter = stats_grinder.most_improved_batter(from, to)"
      :was_run: 1
    - :content: "    ostream.puts batter.name"
      :was_run: 1
    - :content: "    ostream.puts"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def report_slugging_percentage_roster_for(team, year)"
      :was_run: 1
    - :content: '    ostream.puts "#{year} Slugging percentages for #{team}:"'
      :was_run: 1
    - :content: "    batters = stats_grinder.team_members_for_year(team, year)"
      :was_run: 1
    - :content: "    batters_with_stats = batters.map {|batter|"
      :was_run: 1
    - :content: "      [batter, batter.stats_for_year(year).slugging_percentage]"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "    batters_with_stats.sort_by(&:last).reverse"
      :was_run: 1
    - :content: "    batters_with_stats.each do |batter, slugging_percentage|"
      :was_run: 1
    - :content: '      ostream.puts "%20s: %6.3f" % [batter.name, slugging_percentage]'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: "    ostream.puts"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def report_triple_crown_winner_in_league_for(league, year)"
      :was_run: 1
    - :content: '    ostream.puts "#{year} #{league} Triple Crown Winner:"'
      :was_run: 1
    - :content: "    if winner = stats_grinder.triple_crown_winner_in_league_for(league,
        year)"
      :was_run: 1
    - :content: "      ostream.puts winner.name"
      :was_run: 1
    - :content: "    else"
      :was_run: 
    - :content: '      ostream.puts "(No winner)"'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods:
      Batboy#initialize: 0.0
      Batboy#report_all_done: 0.0
      Batboy#report_most_improved_batter_in: 0.0
      Batboy#report_slugging_percentage_roster_for: 18.181818181818183
      Batboy#report_triple_crown_winner_in_league_for: 0.0
  "./lib/batter.rb":
    :lines:
    - :content: require_relative "csv_reader"
      :was_run: 1
    - :content: require_relative "batting_data"
      :was_run: 1
    - :content: require_relative "patches"
      :was_run: 1
    - :content: "# Representation of a player. Class-level finders search the dataset"
      :was_run: 
    - :content: "# while instance methods provide stats and convenience lookup into"
      :was_run: 
    - :content: "# player demographic data"
      :was_run: 
    - :content: class Batter
      :was_run: 1
    - :content: "  extend Forwardable"
      :was_run: 1
    - :content: "  attr_reader :id, :last_name, :first_name"
      :was_run: 1
    - :content: "  private_attr_reader :batting_data"
      :was_run: 1
    - :content: "  def initialize(id:, last_name:, first_name:)"
      :was_run: 1
    - :content: "    @id, @last_name, @first_name = id, last_name, first_name"
      :was_run: 1
    - :content: "    @batting_data = Hash.new do |hash, year|"
      :was_run: 1
    - :content: "      hash[year] = Hash.new do |hash2, league_id|"
      :was_run: 1
    - :content: "        hash2[league_id] = Hash.new do |hash3, team_id|"
      :was_run: 1
    - :content: "          hash3[team_id] = BattingData.new player_id: id"
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  def_delegators :all_batting_data_ever, :games, :at_bats, :runs,"
      :was_run: 1
    - :content: "                 :hits, :doubles, :triples, :home_runs,"
      :was_run: 
    - :content: "                 :runs_batted_in, :stolen_bases, :caught_stealing,"
      :was_run: 
    - :content: "                 :batting_average"
      :was_run: 
    - :content: "  # Selectors -- similar to ActiveRecord, we can find the first batter"
      :was_run: 
    - :content: "  # or find by id."
      :was_run: 
    - :content: "  def self.first"
      :was_run: 1
    - :content: "    batter_data.first.last"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def self.find(id:)"
      :was_run: 1
    - :content: "    batter_data.fetch id"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def self.find_all(year: nil, league: nil, team: nil)"
      :was_run: 1
    - :content: "    return batter_data.map(&:last) unless year"
      :was_run: 1
    - :content: "    return find_all_by_year(year) unless league || team"
      :was_run: 1
    - :content: "    # subtle: if you supply both league and team, ignore league"
      :was_run: 
    - :content: "    return find_all_by_league_and_year(league, year) unless team"
      :was_run: 1
    - :content: "    find_all_by_team_and_year(team, year)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def name"
      :was_run: 1
    - :content: '    "%s %s" % [first_name, last_name]'
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def sortable_name"
      :was_run: 1
    - :content: '    "%s, %s" % [last_name, first_name]'
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def years"
      :was_run: 1
    - :content: "    batting_data.keys"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def stats_for_year(year)"
      :was_run: 1
    - :content: "    all_batting_data_for_year batting_data[year]"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def stats_for_league_and_year(league, year)"
      :was_run: 1
    - :content: "    return nil unless batting_data.key?(year) &&"
      :was_run: 
    - :content: "      batting_data[year] && batting_data[year].key?(league)"
      :was_run: 1
    - :content: "    # FIXME: dis nasty. Have to pass in a key with the hash, which"
      :was_run: 
    - :content: "    # means having to lump on the league key again here. Mai ow--do"
      :was_run: 
    - :content: "    # not want. Is it really necessary? Need to revisit the method"
      :was_run: 
    - :content: "    # breakdown and see if it can't be cleaned up"
      :was_run: 
    - :content: "    all_batting_data_for_year({ league => batting_data[year][league]
        })"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def played_any_games?(year:, league: nil, team: nil)"
      :was_run: 1
    - :content: "    return played_any_games_in_year?(year) unless league || team"
      :was_run: 1
    - :content: "    return played_any_games_in_league_in_year?(league, year) unless
        team"
      :was_run: 1
    - :content: "    played_any_games_for_team_in_year?(team, year)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # I hate methods like this, but whatchagonnado. Basically this"
      :was_run: 
    - :content: "  # method lets us cram a line of data from the CSV file into the"
      :was_run: 
    - :content: "  # Batter and the Batter will init a new record with it, or add
        it to"
      :was_run: 
    - :content: "  # any existing stats for that year/league/team (the data file has"
      :was_run: 
    - :content: "  # over 550 entries that are same player/year, and often same"
      :was_run: 
    - :content: "  # player/year/league/team. And often same player/year but different"
      :was_run: 
    - :content: "  # team, and occasionally different league. The fact is this data
        is"
      :was_run: 
    - :content: "  # SUPER messy and we gotta live with it, because the reality it's"
      :was_run: 
    - :content: "  # tracking is also super messy"
      :was_run: 
    - :content: "  def add_batting_data(bd)"
      :was_run: 1
    - :content: "    @batting_data[bd.year][bd.league][bd.team] += bd"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  #"
      :was_run: 
    - :content: "  # END OF PUBLIC API"
      :was_run: 
    - :content: "  #"
      :was_run: 
    - :content: "  private"
      :was_run: 1
    - :content: "  # Private Finders"
      :was_run: 
    - :content: "  private_class_method def self.find_all_by_year(year)"
      :was_run: 1
    - :content: "    batter_data.reject {|id, batter|"
      :was_run: 
    - :content: "      !batter.played_any_games?(year: year)"
      :was_run: 1
    - :content: "    }.map(&:last)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  private_class_method def self.find_all_by_team_and_year(team, year)"
      :was_run: 1
    - :content: "    batter_data.reject {|id, batter|"
      :was_run: 
    - :content: "      !batter.played_any_games?(year: year, team: team)"
      :was_run: 1
    - :content: "    }.map(&:last)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  private_class_method def self.find_all_by_league_and_year(league,
        year)"
      :was_run: 1
    - :content: "    batter_data.reject {|id, batter|"
      :was_run: 
    - :content: "      !batter.played_any_games?(year: year, league: league)"
      :was_run: 1
    - :content: "    }.map(&:last)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # Internal caching method so we only ever load batter data once
        per"
      :was_run: 
    - :content: "  # program run"
      :was_run: 
    - :content: "  private_class_method def self.batter_data"
      :was_run: 1
    - :content: "    @@batter_data ||= load_batter_data"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # Internal caching method, ugh, WHY IS THIS ON THIS CLASS--please"
      :was_run: 
    - :content: '  # give me a reason other than "I suck". Okay, fine: "I suck until
        I'
      :was_run: 
    - :content: '  # refactor."'
      :was_run: 
    - :content: "  private_class_method def self.load_batter_data"
      :was_run: 1
    - :content: "    # Refactor me: hardcodey much? [SPIKE]"
      :was_run: 
    - :content: '    batters = CsvReader.new("./data/Master-small.csv")'
      :was_run: 1
    - :content: "      .all"
      :was_run: 
    - :content: '      .reject {|row| row["playerID"].nil? }'
      :was_run: 1
    - :content: "      .map {|row|"
      :was_run: 
    - :content: "        Batter.new("
      :was_run: 1
    - :content: '                   id: row["playerID"],'
      :was_run: 
    - :content: '                   last_name: row["nameLast"],'
      :was_run: 
    - :content: '                   first_name: row["nameFirst"]'
      :was_run: 
    - :content: "                   )"
      :was_run: 
    - :content: "      }"
      :was_run: 
    - :content: "      .each_with_object({}) {|batter, hash| hash[batter.id] = batter
        }"
      :was_run: 1
    - :content: "    @@batter_data = batters"
      :was_run: 1
    - :content: "    load_batting_data"
      :was_run: 1
    - :content: "    batters"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # FIXME: I *REALLY* belong in a data conversion class!!!! These
        are"
      :was_run: 
    - :content: "  # the CSV header identifiers keyed by our internal data columns.
        Why"
      :was_run: 
    - :content: "  # not use what's in the CSV, you ask? Let me answer that question
        by"
      :was_run: 
    - :content: "  # stating authoritatively that if you are asking that question
        you"
      :was_run: 
    - :content: "  # obviously have no clue what's IN that frickin' CSV file. You
        wanna"
      :was_run: 
    - :content: "  # know what's in that file? Do you? DO YOU REALLY? MADNESS! MADNESS"
      :was_run: 
    - :content: "  # I SAY! MADNESS IS WHAT IS IN THAT FILE! When Nietzche famously"
      :was_run: 
    - :content: '  # wrote "If you gaze long into the Abyss, the Abyss gazes also
        into'
      :was_run: 
    - :content: '  # you," HE WAS TALKING ABOUT THIS CSV FILE. IT''S BAT-POO CRAZY
        IS'
      :was_run: 
    - :content: "  # WHAT I AM TRYING TO TELL YOU--NO, DON'T LOOK, DON'T LOOK IN THE"
      :was_run: 
    - :content: "  # FILE, DON'T OPEN THE..."
      :was_run: 
    - :content: "  #"
      :was_run: 
    - :content: "  # You looked, didn't you."
      :was_run: 
    - :content: "  #"
      :was_run: 
    - :content: "  # Well. Welcome to my madness. Make yourself comfortable; THERE
        IS"
      :was_run: 
    - :content: "  # NO WAY BACK."
      :was_run: 
    - :content: "  #"
      :was_run: 
    - :content: "  # I did try to warn you."
      :was_run: 
    - :content: "  private_class_method def self.batting_data_keys"
      :was_run: 1
    - :content: '    { player_id: "playerID",'
      :was_run: 
    - :content: '      year: "yearID",'
      :was_run: 
    - :content: '      league: "league",'
      :was_run: 
    - :content: '      team: "teamID",'
      :was_run: 
    - :content: '      games: "G",'
      :was_run: 
    - :content: '      at_bats: "AB",'
      :was_run: 
    - :content: '      runs: "R",'
      :was_run: 
    - :content: '      hits: "H",'
      :was_run: 
    - :content: '      doubles: "2B",'
      :was_run: 
    - :content: '      triples: "3B",'
      :was_run: 
    - :content: '      home_runs: "HR",'
      :was_run: 
    - :content: '      runs_batted_in: "RBI",'
      :was_run: 
    - :content: '      stolen_bases: "SB",'
      :was_run: 
    - :content: '      caught_stealing: "CS"'
      :was_run: 
    - :content: "    }"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # Internal caching method. See earlier note about the technical"
      :was_run: 
    - :content: "  # depth and temporal breadth within which I suck."
      :was_run: 
    - :content: "  private_class_method def self.load_batting_data"
      :was_run: 1
    - :content: '    CsvReader.new("./data/Batting-07-12.csv").all.map {|row|'
      :was_run: 1
    - :content: "      data = {}"
      :was_run: 1
    - :content: "      batting_data_keys.each_pair do |new_key, old_key|"
      :was_run: 1
    - :content: "        data[new_key] = row[old_key]"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "      Batter.find(id: data[:player_id]).add_batting_data(BattingData.new(data))"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  def played_any_games_in_year?(year)"
      :was_run: 1
    - :content: "    years.include? year"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def played_any_games_for_team_in_year?(team, year)"
      :was_run: 1
    - :content: "    played_any_games?(year: year) && batting_data[year].any? {|_,
        team_data|"
      :was_run: 
    - :content: "      team_data.keys.include?(team)"
      :was_run: 1
    - :content: "    }"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def played_any_games_in_league_in_year?(league, year)"
      :was_run: 1
    - :content: "    played_any_games?(year: year) && batting_data[year].any? {|league_name,
        _|"
      :was_run: 
    - :content: "      league == league_name"
      :was_run: 1
    - :content: "    }"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # Consolidate all my batting data across all years, leagues, teams,"
      :was_run: 
    - :content: "  # etc."
      :was_run: 
    - :content: "  def all_batting_data_ever"
      :was_run: 1
    - :content: "    batting_data.map {|year, league_data|"
      :was_run: 1
    - :content: "      all_batting_data_for_year league_data"
      :was_run: 1
    - :content: "    }.reduce :+"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  # Helper: given a subtree of BattingDatas for a given year, dive"
      :was_run: 
    - :content: "  # into each league. Private method because it accepts a subtree
        of"
      :was_run: 
    - :content: "  # the batting_data structure. Knows too much about our internals."
      :was_run: 
    - :content: "  def all_batting_data_for_year(data)"
      :was_run: 1
    - :content: "    data.map {|league, team_data|"
      :was_run: 1
    - :content: "      all_batting_data_for_league team_data"
      :was_run: 1
    - :content: "    }.reduce :+"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  # Helper: given a subtree of BattingDatas for a given league, dive"
      :was_run: 
    - :content: "  # into each team. Private method because it accepts a subtree of
        the"
      :was_run: 
    - :content: "  # batting_data structure. Knows too much about our internals."
      :was_run: 
    - :content: "  def all_batting_data_for_league(data)"
      :was_run: 1
    - :content: "    # We could extract all_batting_data_for_team here, but Hash#values"
      :was_run: 
    - :content: "    # gives us the same thing at this point. Private methods FTW--no"
      :was_run: 
    - :content: "    # using this method, you public-API-using knuckledraggers!"
      :was_run: 
    - :content: "    data.values.reduce :+"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods:
      Batter#initialize: 0.0
      Batter::first: 0.0
      Batter::find: 0.0
      Batter::find_all: 16.666666666666664
      Batter#name: 0.0
      Batter#sortable_name: 0.0
      Batter#years: 0.0
      Batter#stats_for_year: 0.0
      Batter#stats_for_league_and_year: 62.5
      Batter#played_any_games?: 0.0
      Batter#add_batting_data: 33.33333333333333
      Batter::find_all_by_year: 50.0
      Batter::find_all_by_team_and_year: 50.0
      Batter::find_all_by_league_and_year: 50.0
      Batter::batter_data: 0.0
      Batter::load_batter_data: 50.0
      Batter::batting_data_keys: 87.5
      Batter::load_batting_data: 0.0
      Batter#played_any_games_in_year?: 0.0
      Batter#played_any_games_for_team_in_year?: 40.0
      Batter#played_any_games_in_league_in_year?: 40.0
      Batter#all_batting_data_ever: 0.0
      Batter#all_batting_data_for_year: 0.0
      Batter#all_batting_data_for_league: 60.0
  "./lib/batting_data.rb":
    :lines:
    - :content: require_relative 'batter'
      :was_run: 1
    - :content: require_relative 'patches'
      :was_run: 1
    - :content: "# Stats aggregation/integration class"
      :was_run: 
    - :content: class BattingData
      :was_run: 1
    - :content: "  attr_reader :player_id, :player, :year, :league, :team, :games,"
      :was_run: 1
    - :content: "              :at_bats, :runs, :hits, :doubles, :triples, :home_runs,"
      :was_run: 
    - :content: "              :runs_batted_in, :stolen_bases, :caught_stealing"
      :was_run: 
    - :content: "  private_attr_writer :player_id, :player, :year, :league, :team,"
      :was_run: 1
    - :content: "                      :games, :at_bats, :runs, :hits, :doubles,"
      :was_run: 
    - :content: "                      :triples, :home_runs, :runs_batted_in,"
      :was_run: 
    - :content: "                      :stolen_bases, :caught_stealing"
      :was_run: 
    - :content: "  def initialize(data={})"
      :was_run: 1
    - :content: "    @player_id = data.fetch(:player_id)"
      :was_run: 1
    - :content: "    @player = Batter.find(id: player_id)"
      :was_run: 1
    - :content: "    @year = data[:year].to_i"
      :was_run: 1
    - :content: "    @league, @team = data[:league], data[:team]"
      :was_run: 1
    - :content: '    integrable_stats.each {|key| send "#{key}=", data[key].to_i }'
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def integrable_stats"
      :was_run: 1
    - :content: "    ["
      :was_run: 
    - :content: "     :games, :at_bats, :runs, :hits, :doubles, :triples, :home_runs,"
      :was_run: 1
    - :content: "     :runs_batted_in, :stolen_bases, :caught_stealing"
      :was_run: 
    - :content: "    ]"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  def batting_average"
      :was_run: 1
    - :content: "    return 0.0 unless at_bats > 0"
      :was_run: 1
    - :content: "    hits / at_bats.to_f"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def slugging_percentage"
      :was_run: 1
    - :content: "    return 0.0 unless at_bats > 0"
      :was_run: 1
    - :content: "    bases_advanced / at_bats.to_f"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # Add BattingData to another and return a new BattingData containing"
      :was_run: 
    - :content: "  # the sums of the stats."
      :was_run: 
    - :content: "  def +(other)"
      :was_run: 1
    - :content: "    # It may seem odd to init player, year, league and team here,
        but we may"
      :was_run: 
    - :content: "    # be adding a valid BattingData to a player's empty BattingData,"
      :was_run: 
    - :content: "    # and if so we want to return the valid one."
      :was_run: 
    - :content: "    ors = %i(player_id player year league).each_with_object({}) {|key,
        hash|"
      :was_run: 1
    - :content: "      hash[key] = send(key) || other.send(key)"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "    sums = integrable_stats.each_with_object({}) {|key, hash|"
      :was_run: 1
    - :content: "      hash[key] = send(key) + other.send(key)"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "    BattingData.new(ors.merge sums)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  private"
      :was_run: 1
    - :content: "  def bases_advanced"
      :was_run: 1
    - :content: "    singles + 2*doubles + 3*triples + 4*home_runs"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def singles"
      :was_run: 1
    - :content: "    hits - (doubles + triples + home_runs)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods:
      BattingData#initialize: 0.0
      BattingData#integrable_stats: 60.0
      BattingData#batting_average: 0.0
      BattingData#slugging_percentage: 0.0
      BattingData#+: 45.45454545454545
      BattingData#bases_advanced: 0.0
      BattingData#singles: 0.0
  "./lib/csv_reader.rb":
    :lines:
    - :content: require 'csv'
      :was_run: 1
    - :content: "# Load CSV file and read it"
      :was_run: 
    - :content: class CsvReader
      :was_run: 1
    - :content: "  def initialize(filename)"
      :was_run: 1
    - :content: "    @filename = filename"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def all"
      :was_run: 1
    - :content: "    data"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def data"
      :was_run: 1
    - :content: "    @data ||= CSV.read(@filename, headers: true)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods:
      CsvReader#initialize: 0.0
      CsvReader#all: 0.0
      CsvReader#data: 0.0
  "./lib/patches.rb":
    :lines:
    - :content: require_relative "../patches/scoped_attr_accessors"
      :was_run: 1
    :percent_run: 100
    :methods: {}
  "./lib/stats_grinder.rb":
    :lines:
    - :content: require_relative "batter"
      :was_run: 1
    - :content: "# StatsGrinder is a class that is aware of BattingData from a higher"
      :was_run: 
    - :content: "# level than BattingData itself; specifically it is able to compare"
      :was_run: 
    - :content: "# BattingData objects to each other to determine improvement, identify"
      :was_run: 
    - :content: "# triple crown winners, etc. It also knows how to search for relevant"
      :was_run: 
    - :content: "# Batters to satisfy a given query."
      :was_run: 
    - :content: "#"
      :was_run: 
    - :content: "# It may be possible to offload some of the stats to BattingData.
        For"
      :was_run: 
    - :content: "# example, BattingData#batting_average_improvement(other_batting_data)"
      :was_run: 
    - :content: "# but for now the purpose of StatsGrinder is to satisfy our curiosity"
      :was_run: 
    - :content: "# about various baseball statistics that are fussy and hand-tweaked"
      :was_run: 
    - :content: "# (like only considering batters with a certain number of at-bats
        for"
      :was_run: 
    - :content: "# a given report)"
      :was_run: 
    - :content: class StatsGrinder
      :was_run: 1
    - :content: "  def most_improved_batter(from, to)"
      :was_run: 1
    - :content: "    batters1 = Batter.find_all year: from"
      :was_run: 1
    - :content: "    batters1 = with_at_least_200_at_bats(batters1, from)"
      :was_run: 1
    - :content: "    batters2 = Batter.find_all year: to"
      :was_run: 1
    - :content: "    batters2 = with_at_least_200_at_bats(batters2, to)"
      :was_run: 1
    - :content: "    batters = common_batters(batters1, batters2)"
      :was_run: 1
    - :content: "    most_improved(batters, from, to)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # So far Batboy has only ever needed to talk to StatsGrinder. No"
      :was_run: 
    - :content: "  # need for it to talk directly to Batter just yet--let's proxy
        this"
      :was_run: 
    - :content: "  # for now and get an intention-revealing name in the bargain."
      :was_run: 
    - :content: "  def team_members_for_year(team, year)"
      :was_run: 1
    - :content: "    Batter.find_all(team: team, year: year)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def triple_crown_winner_in_league_for(league, year)"
      :was_run: 1
    - :content: "    # BattingData already has everything we need here -- just need
        to"
      :was_run: 
    - :content: "    # teach Batter to cobble up and return BattingDatas that only"
      :was_run: 
    - :content: "    # include data from the desired league and year. Then ask each"
      :was_run: 
    - :content: "    # batter for stats_for_league_and_year, and see if the max_by"
      :was_run: 
    - :content: "    # :home_runs, :runs_batted_in, and :batting_average are all the"
      :was_run: 
    - :content: "    # same person."
      :was_run: 
    - :content: "    contenders = Batter.find_all league: league, year: year"
      :was_run: 1
    - :content: "    contenders = with_at_least_400_at_bats_in_league(contenders,
        year, league)"
      :was_run: 1
    - :content: "    homer = contenders.max_by {|batter|"
      :was_run: 1
    - :content: "      batter.stats_for_league_and_year(league, year).home_runs"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "    run_batter_inner = contenders.max_by {|batter|"
      :was_run: 1
    - :content: "      batter.stats_for_league_and_year(league, year).runs_batted_in"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "    best_hitter = contenders.max_by {|batter|"
      :was_run: 1
    - :content: "      batter.stats_for_league_and_year(league, year).batting_average"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "    if homer == run_batter_inner && homer == best_hitter"
      :was_run: 1
    - :content: "      homer"
      :was_run: 1
    - :content: "    else"
      :was_run: 
    - :content: "      nil # ;-)"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  private"
      :was_run: 1
    - :content: "  # Isolating this method because the coding exercise does not"
      :was_run: 
    - :content: "  # adequately explain how to calculate improvement -- do we want"
      :was_run: 
    - :content: "  # percentage improvement, or raw points gained? Fortunately, for"
      :was_run: 
    - :content: "  # the year in question the most improved batter wins by a wide"
      :was_run: 
    - :content: "  # enough margin to take both raw points AND percentage, so here"
      :was_run: 
    - :content: "  # endeth my pondering--it's isolated and I'm done. :-) [Update:
        this"
      :was_run: 
    - :content: "  # was bugging me so I called my baseball-stats-loving friend, and
        he"
      :was_run: 
    - :content: "  # informed me that it's preferred to calculate based on raw points,"
      :was_run: 
    - :content: "  # not percentage, because batting average is already a percentage,"
      :was_run: 
    - :content: '  # and grinding out "percentages of percentages" becomes'
      :was_run: 
    - :content: "  # statistically problematic.]"
      :was_run: 
    - :content: "  def batter_improvement(batter, from, to)"
      :was_run: 1
    - :content: "    tba, fba = batter.stats_for_year(to).batting_average,"
      :was_run: 1
    - :content: "         batter.stats_for_year(from).batting_average"
      :was_run: 
    - :content: "    improvement = tba - fba"
      :was_run: 1
    - :content: "    # improvement_percent = improvement / fba"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  def with_at_least_200_at_bats(batters, year)"
      :was_run: 1
    - :content: "    batters.reject {|batter| batter.stats_for_year(year).at_bats
        < 200 }"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  def with_at_least_400_at_bats_in_league(batters, year, league)"
      :was_run: 1
    - :content: "    batters.reject {|batter|"
      :was_run: 1
    - :content: "      batter.stats_for_league_and_year(league, year).at_bats < 400"
      :was_run: 1
    - :content: "    }"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: "  # reject batters not present in both years"
      :was_run: 
    - :content: "  def common_batters(batters1, batters2)"
      :was_run: 1
    - :content: "    batter2_ids = batters2.map(&:id)"
      :was_run: 1
    - :content: "    batters1.reject {|batter| !batter2_ids.include?(batter.id) }"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: "  # return most-improved batter in set for the 2 years in"
      :was_run: 
    - :content: "  # question. This could be extracted into a sort_by / first method"
      :was_run: 
    - :content: "  # pair but ruby already gives us max_by."
      :was_run: 
    - :content: "  def most_improved(batters, from, to)"
      :was_run: 1
    - :content: "    batters_with_improvements = batters.map {|batter|"
      :was_run: 1
    - :content: "      [batter, batter_improvement(batter, from, to)]"
      :was_run: 1
    - :content: "    }.max_by {|b, bwi| bwi }.first"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods:
      StatsGrinder#most_improved_batter: 0.0
      StatsGrinder#team_members_for_year: 0.0
      StatsGrinder#triple_crown_winner_in_league_for: 45.0
      StatsGrinder#batter_improvement: 25.0
      StatsGrinder#with_at_least_200_at_bats: 0.0
      StatsGrinder#with_at_least_400_at_bats_in_league: 0.0
      StatsGrinder#common_batters: 0.0
      StatsGrinder#most_improved: 0.0
  "./patches/scoped_attr_accessors.rb":
    :lines:
    - :content: require "scoped_attr_accessor"
      :was_run: 1
    - :content: "# Monkeypatch all classes to allow private_attr_reader, protected_attr_accessor,
        etc."
      :was_run: 
    - :content: class Object
      :was_run: 1
    - :content: "  extend ScopedAttrAccessor"
      :was_run: 1
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods: {}
  "./spec/lib/batboy_spec.rb":
    :lines:
    - :content: require 'spec_helper'
      :was_run: 1
    - :content: require_relative '../../lib/batboy'
      :was_run: 1
    - :content: require 'stringio'
      :was_run: 1
    - :content: describe Batboy do
      :was_run: 1
    - :content: "  let(:buffer) { StringIO.new }"
      :was_run: 1
    - :content: "  let(:output) { buffer.string }"
      :was_run: 1
    - :content: '  let(:stats_grinder) { double("StatsGrinder") }'
      :was_run: 1
    - :content: "  let(:batboy) { Batboy.new buffer, stats_grinder }"
      :was_run: 1
    - :content: '  describe "initialize" do'
      :was_run: 1
    - :content: '    context "with no arguments" do'
      :was_run: 1
    - :content: "      before(:each) do"
      :was_run: 1
    - :content: "        $stdout = buffer"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "      after(:each) do"
      :was_run: 1
    - :content: "        $stdout = STDOUT"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: '      it "assumes writing to $stdout" do'
      :was_run: 1
    - :content: "        Batboy.new.report_all_done"
      :was_run: 1
    - :content: '        output.should include("All done.\n")'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    context "with target buffer" do'
      :was_run: 1
    - :content: '      it "accepts buffer to display to" do'
      :was_run: 1
    - :content: "        Batboy.new(buffer).report_all_done"
      :was_run: 1
    - :content: '        output.should include("All done.\n")'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: '  describe "#report_all_done" do'
      :was_run: 1
    - :content: '    it "writes ''All done.'' to buffer" do'
      :was_run: 1
    - :content: "      batboy.report_all_done"
      :was_run: 1
    - :content: '      output.should include("All done.\n")'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: '  describe "#report_most_improved_batter_in(year)" do'
      :was_run: 1
    - :content: "    before(:each) do"
      :was_run: 1
    - :content: '      batter = double("Batter", name: "Hank Aaron")'
      :was_run: 1
    - :content: "      stats_grinder.stub(:most_improved_batter).and_return batter"
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: '    it "emits ''Most improved batter [year-1]->[year]:''" do'
      :was_run: 1
    - :content: "      # Refactor me: this will need something it can get the answer
        from"
      :was_run: 
    - :content: "      batboy.report_most_improved_batter_in 1999"
      :was_run: 1
    - :content: '      output.should include("Most improved batter 1998->1999:")'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: '    it "asks StatsGrinder to find most improved batter" do'
      :was_run: 1
    - :content: '      batter = double("Batter", name: "Hank Aaron")'
      :was_run: 1
    - :content: "      stats_grinder.should_receive(:most_improved_batter).with(1998,
        1999).and_return batter"
      :was_run: 1
    - :content: "      batboy.report_most_improved_batter_in 1999"
      :was_run: 1
    - :content: '      output.should include("Most improved batter 1998->1999:")'
      :was_run: 1
    - :content: '      output.should include("Hank Aaron")'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: "    # TODO: As I move forward with slugging percentages, I see a"
      :was_run: 
    - :content: '    # distinct need for "display a Batter with slugging percentage";'
      :was_run: 
    - :content: "    # did I gloss over the need to display a Batter with batting"
      :was_run: 
    - :content: "    # average improvement? Maybe. Circle back to this later -- what
        we"
      :was_run: 
    - :content: "    # have now is pretty and shippable."
      :was_run: 
    - :content: '    describe "#report_slugging_percentage_roster_for(''SEA'', 2008)"
        do'
      :was_run: 1
    - :content: '      it "asks StatsGrinder for 2008 Seattle team roster" do'
      :was_run: 1
    - :content: '        batting_data = double("BattingData", slugging_percentage:
        0.5)'
      :was_run: 1
    - :content: '        batter1 = double("Batter", name: "Sluggo McLongball",'
      :was_run: 1
    - :content: "                         stats_for_year: batting_data)"
      :was_run: 
    - :content: '        batter2 = double("Batter", name: "Ballsmack O''Hittem",'
      :was_run: 1
    - :content: "                         stats_for_year: batting_data)"
      :was_run: 
    - :content: "        team = [batter1, batter2]"
      :was_run: 1
    - :content: "        stats_grinder.should_receive(:team_members_for_year).with('SEA',
        2008).and_return team"
      :was_run: 1
    - :content: '        batboy.report_slugging_percentage_roster_for("SEA", 2008)'
      :was_run: 1
    - :content: '        output.should include("2008 Slugging percentages for SEA:")'
      :was_run: 1
    - :content: '        output.should include("Sluggo McLongball:  0.500")'
      :was_run: 1
    - :content: '        output.should include("Ballsmack O''Hittem:  0.500")'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#report_triple_crown_winner_in(league, year)" do'
      :was_run: 1
    - :content: '      it "asks StatsGrinder for 2011 NL triple crown winner" do'
      :was_run: 1
    - :content: '        stats_grinder.should_receive(:triple_crown_winner_in_league_for).at_least(:once).with("NL",
        2011).and_return nil'
      :was_run: 1
    - :content: '        batboy.report_triple_crown_winner_in_league_for("NL", 2011)'
      :was_run: 1
    - :content: '        output.should include("2011 NL Triple Crown Winner:\n(No
        winner)")'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: '      it "asks StatsGrinder for 2012 AL triple crown winner" do'
      :was_run: 1
    - :content: '        batter = double("Batter", name: "Sluggo McLongball")'
      :was_run: 1
    - :content: '        stats_grinder.should_receive(:triple_crown_winner_in_league_for).at_least(:once).with("AL",
        2012).and_return batter'
      :was_run: 1
    - :content: '        batboy.report_triple_crown_winner_in_league_for("AL", 2012)'
      :was_run: 1
    - :content: '        output.should include("2012 AL Triple Crown Winner:\nSluggo
        McLongball")'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    # it "emits ''Slugging percentage for all players on the Oakland
        A''s in 2007:''" do'
      :was_run: 
    - :content: '    #   program_output.should include("2007 Slugging percentages
        for Oakland A''s:")'
      :was_run: 
    - :content: "    # end"
      :was_run: 
    - :content: '    # it "emits AL triple-crown winner for 2011" do'
      :was_run: 
    - :content: '    #   program_output.should include("2011 AL Triple Crown Winner:")'
      :was_run: 
    - :content: "    # end"
      :was_run: 
    - :content: '    # it "emits NL triple-crown winner for 2011" do'
      :was_run: 
    - :content: '    #   program_output.should include("2011 NL Triple Crown Winner:")'
      :was_run: 
    - :content: "    # end"
      :was_run: 
    - :content: '    # it "emits AL triple-crown winner for 2012" do'
      :was_run: 
    - :content: '    #   program_output.should include("2012 AL Triple Crown Winner:")'
      :was_run: 
    - :content: "    # end"
      :was_run: 
    - :content: '    # it "emits NL triple-crown winner for 2012" do'
      :was_run: 
    - :content: '    #   program_output.should include("2012 NL Triple Crown Winner:")'
      :was_run: 
    - :content: "    # end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods: {}
  "./spec/lib/batter_spec.rb":
    :lines:
    - :content: require 'spec_helper'
      :was_run: 1
    - :content: require_relative '../../lib/batter'
      :was_run: 1
    - :content: def spec_stats_for(description, varname, stats)
      :was_run: 1
    - :content: '  context "#{description}" do'
      :was_run: 1
    - :content: '    let(:subject) { instance_eval "#{varname}" }'
      :was_run: 1
    - :content: "    its(:games) { should == stats[:games] }"
      :was_run: 1
    - :content: "    its(:at_bats) { should == stats[:at_bats] }"
      :was_run: 1
    - :content: "    its(:runs) { should == stats[:runs] }"
      :was_run: 1
    - :content: "    its(:hits) { should == stats[:hits] }"
      :was_run: 1
    - :content: "    its(:doubles) { should == stats[:doubles] }"
      :was_run: 1
    - :content: "    its(:triples) { should == stats[:triples] }"
      :was_run: 1
    - :content: "    its(:home_runs) { should == stats[:home_runs] }"
      :was_run: 1
    - :content: "    its(:runs_batted_in) { should == stats[:runs_batted_in] }"
      :was_run: 1
    - :content: "    its(:stolen_bases) { should == stats[:stolen_bases] }"
      :was_run: 1
    - :content: "    its(:caught_stealing) { should == stats[:caught_stealing] }"
      :was_run: 1
    - :content: "    its(:batting_average) { should be_within(0.0005).of(stats[:batting_average])
        }"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    - :content: describe Batter do
      :was_run: 1
    - :content: '  context "with autoloaded data" do'
      :was_run: 1
    - :content: "    # Josh Wilson played 345 games for 6 teams in both leagues. He"
      :was_run: 
    - :content: "    # played 45 games in 2009 and 108 games in 2010 for SEA; the
        other"
      :was_run: 
    - :content: "    # teams (ARI, MIL, SDN, WAS, TBA) were all in the NL."
      :was_run: 
    - :content: '    let(:wilson) { Batter.find id: "wilsojo03" }'
      :was_run: 1
    - :content: "    # Kim Byung-Hyun played 28 games for three teams in both leagues"
      :was_run: 
    - :content: "    # in 2007. He's interesting because he's the only player with
        four"
      :was_run: 
    - :content: "    # entries for a single year--and it's the only year he played."
      :was_run: 
    - :content: '    let(:kimby) { Batter.find id: "kimby01" }'
      :was_run: 1
    - :content: "    # Jeremy Accardo is interesting because he's got a few records"
      :was_run: 
    - :content: "    # listed as 0,0,0,0,0,0,0,0,0,0 and a few records listed as"
      :was_run: 
    - :content: "    # ,,,,,,,,,. He's also interesting because he's played a total
        of"
      :was_run: 
    - :content: "    # 134 games from 2007 to 2012 and he's never had a single at-bat."
      :was_run: 
    - :content: '    let(:accardo) { Batter.find id: "accarje01" }'
      :was_run: 1
    - :content: '    describe ".first" do'
      :was_run: 1
    - :content: '      it "returns Hank Aaron" do'
      :was_run: 1
    - :content: '        Batter.first.name.should == "Hank Aaron"'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe ".find" do'
      :was_run: 1
    - :content: '      it "finds batter" do'
      :was_run: 1
    - :content: '        wilson.name.should == "Josh Wilson"'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe ".find_all" do'
      :was_run: 1
    - :content: '      context "with no arguments" do'
      :was_run: 1
    - :content: "        let(:batters) { Batter.find_all.sort_by(&:sortable_name)
        }"
      :was_run: 1
    - :content: '        it "finds all batters" do'
      :was_run: 1
    - :content: "          batters.size.should == 17945"
      :was_run: 1
    - :content: '          batters.first.name.should == "David Aardsma"'
      :was_run: 1
    - :content: '          batters.last.name.should == "Miguel del Toro"'
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: '      context "with year only" do'
      :was_run: 1
    - :content: "        let(:batters_2010) { Batter.find_all(year: 2010).sort_by(&:sortable_name)
        }"
      :was_run: 1
    - :content: '        it "finds batters by year" do'
      :was_run: 1
    - :content: "          batters_2010.size.should == 1157"
      :was_run: 1
    - :content: '          batters_2010.first.name.should == "David Aardsma"'
      :was_run: 1
    - :content: '          batters_2010.last.name.should == "Jorge de la Rosa"'
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: '      context "with team and year" do'
      :was_run: 1
    - :content: '        let(:seattle_2008) { Batter.find_all(team: "SEA", year: 2008).sort_by(&:sortable_name)
        }'
      :was_run: 1
    - :content: '        it "finds batters by team and year" do'
      :was_run: 1
    - :content: "          seattle_2008.size.should == 44"
      :was_run: 1
    - :content: '          seattle_2008.first.name.should == "Cha Seung Baek"'
      :was_run: 1
    - :content: '          seattle_2008.last.name.should == "Jake Woods"'
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: '      context "with league and year" do'
      :was_run: 1
    - :content: '        let(:al_2008) { Batter.find_all(league: "AL", year: 2008).sort_by(&:sortable_name)
        }'
      :was_run: 1
    - :content: '        it "finds batters by league and year" do'
      :was_run: 1
    - :content: "          al_2008.size.should == 624"
      :was_run: 1
    - :content: "          al_2008.all? { |batter|"
      :was_run: 1
    - :content: '            batter.played_any_games?(year: 2008, league: "AL")'
      :was_run: 1
    - :content: "          }.should be_true"
      :was_run: 
    - :content: '          al_2008.first.name.should == "David Aardsma"'
      :was_run: 1
    - :content: '          al_2008.last.name.should == "Joel Zumaya"'
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "    # This spec is fairly transient; the API started out totally"
      :was_run: 
    - :content: "    # public and I want to assert that I have locked it down"
      :was_run: 
    - :content: "    # completely"
      :was_run: 
    - :content: '    describe "private class API" do'
      :was_run: 1
    - :content: "      %i("
      :was_run: 
    - :content: "         find_all_by_year"
      :was_run: 
    - :content: "         find_all_by_team_and_year"
      :was_run: 
    - :content: "         find_all_by_league_and_year"
      :was_run: 
    - :content: "         batter_data"
      :was_run: 
    - :content: "         load_batter_data"
      :was_run: 
    - :content: "         batting_data_keys"
      :was_run: 
    - :content: "         load_batting_data"
      :was_run: 
    - :content: "         ).each do |private_method|"
      :was_run: 1
    - :content: "        describe private_method do"
      :was_run: 1
    - :content: '          it "should be private" do'
      :was_run: 1
    - :content: "            expect {"
      :was_run: 1
    - :content: "              Batter.public_send(private_method)"
      :was_run: 1
    - :content: "            }.to raise_error(NoMethodError, /private method/)"
      :was_run: 
    - :content: "          end"
      :was_run: 
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#played_any_games?(year)" do'
      :was_run: 1
    - :content: '      context "with just a year" do'
      :was_run: 1
    - :content: '        it "returns truthy if batter played that year" do'
      :was_run: 1
    - :content: "          kimby.played_any_games?(year: 2007).should be_true"
      :was_run: 1
    - :content: "          kimby.played_any_games?(year: 2008).should be_false"
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: '      context "with year and team" do'
      :was_run: 1
    - :content: '        it "returns truthy if batter played for that team that year"
        do'
      :was_run: 1
    - :content: '          kimby.played_any_games?(year: 2007, team: "FLO").should
        be_true'
      :was_run: 1
    - :content: '          kimby.played_any_games?(year: 2007, team: "XYZ").should
        be_false'
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: '      context "with year and league" do'
      :was_run: 1
    - :content: '        it "returns truthy if batter played for that league that
        year" do'
      :was_run: 1
    - :content: '          kimby.played_any_games?(year: 2007, league: "NL").should
        be_true'
      :was_run: 1
    - :content: '          kimby.played_any_games?(year: 2007, league: "AL").should
        be_false'
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#years" do'
      :was_run: 1
    - :content: '      it "returns years played" do'
      :was_run: 1
    - :content: "        kimby.years.should == [2007]"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#name" do'
      :was_run: 1
    - :content: '      it "returns first_name-space-last_name" do'
      :was_run: 1
    - :content: '        kimby.name.should == "Byung-Hyun Kim"'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#sortable_name" do'
      :was_run: 1
    - :content: '      it "returns Schwartzian-sortable version of name" do'
      :was_run: 1
    - :content: '        kimby.sortable_name.should == "Kim, Byung-Hyun"'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "BattingData interface" do'
      :was_run: 1
    - :content: '      spec_stats_for("Josh Wilson lifetime stats", "wilson", {'
      :was_run: 1
    - :content: "                       games: 345,"
      :was_run: 
    - :content: "                       at_bats: 920,"
      :was_run: 
    - :content: "                       runs: 82,"
      :was_run: 
    - :content: "                       hits: 210,"
      :was_run: 
    - :content: "                       doubles: 45,"
      :was_run: 
    - :content: "                       triples: 6,"
      :was_run: 
    - :content: "                       home_runs: 9,"
      :was_run: 
    - :content: "                       runs_batted_in: 67,"
      :was_run: 
    - :content: "                       stolen_bases: 13,"
      :was_run: 
    - :content: "                       caught_stealing: 4,"
      :was_run: 
    - :content: "                       batting_average: 0.228"
      :was_run: 
    - :content: "                     })"
      :was_run: 
    - :content: '      spec_stats_for("Jeremy Accardo lifetime stats", "accardo",
        {'
      :was_run: 1
    - :content: "                       games: 134,"
      :was_run: 
    - :content: "                       at_bats: 0,"
      :was_run: 
    - :content: "                       runs: 0,"
      :was_run: 
    - :content: "                       hits: 0,"
      :was_run: 
    - :content: "                       doubles: 0,"
      :was_run: 
    - :content: "                       triples: 0,"
      :was_run: 
    - :content: "                       home_runs: 0,"
      :was_run: 
    - :content: "                       runs_batted_in: 0,"
      :was_run: 
    - :content: "                       stolen_bases: 0,"
      :was_run: 
    - :content: "                       caught_stealing: 0,"
      :was_run: 
    - :content: "                       batting_average: 0.0"
      :was_run: 
    - :content: "                     })"
      :was_run: 
    - :content: '      spec_stats_for("Kim Byung-Hyun lifetime stats", "kimby", {'
      :was_run: 1
    - :content: "                       games: 28,"
      :was_run: 
    - :content: "                       at_bats: 33,"
      :was_run: 
    - :content: "                       runs: 0,"
      :was_run: 
    - :content: "                       hits: 2,"
      :was_run: 
    - :content: "                       doubles: 1,"
      :was_run: 
    - :content: "                       triples: 0,"
      :was_run: 
    - :content: "                       home_runs: 0,"
      :was_run: 
    - :content: "                       runs_batted_in: 1,"
      :was_run: 
    - :content: "                       stolen_bases: 0,"
      :was_run: 
    - :content: "                       caught_stealing: 0,"
      :was_run: 
    - :content: "                       batting_average: 0.061"
      :was_run: 
    - :content: "                     })"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#stats_for_year" do'
      :was_run: 1
    - :content: "      let(:kimby_2007_stats) { kimby.stats_for_year(2007) }"
      :was_run: 1
    - :content: "      let(:wilson_2011_stats) { wilson.stats_for_year(2011) }"
      :was_run: 1
    - :content: '      spec_stats_for("Kim Byung-Hyun 2007 stats", "kimby_2007_stats",
        {'
      :was_run: 1
    - :content: "                       games: 28,"
      :was_run: 
    - :content: "                       at_bats: 33,"
      :was_run: 
    - :content: "                       runs: 0,"
      :was_run: 
    - :content: "                       hits: 2,"
      :was_run: 
    - :content: "                       doubles: 1,"
      :was_run: 
    - :content: "                       triples: 0,"
      :was_run: 
    - :content: "                       home_runs: 0,"
      :was_run: 
    - :content: "                       runs_batted_in: 1,"
      :was_run: 
    - :content: "                       stolen_bases: 0,"
      :was_run: 
    - :content: "                       caught_stealing: 0,"
      :was_run: 
    - :content: "                       batting_average: 0.061"
      :was_run: 
    - :content: "                     })"
      :was_run: 
    - :content: '      spec_stats_for("Josh Wilson 2011 stats", "wilson_2011_stats",
        {'
      :was_run: 1
    - :content: "                       games: 60,"
      :was_run: 
    - :content: "                       at_bats: 85,"
      :was_run: 
    - :content: "                       runs: 13,"
      :was_run: 
    - :content: "                       hits: 19,"
      :was_run: 
    - :content: "                       doubles: 5,"
      :was_run: 
    - :content: "                       triples: 0,"
      :was_run: 
    - :content: "                       home_runs: 2,"
      :was_run: 
    - :content: "                       runs_batted_in: 5,"
      :was_run: 
    - :content: "                       stolen_bases: 1,"
      :was_run: 
    - :content: "                       caught_stealing: 0,"
      :was_run: 
    - :content: "                       batting_average: 0.224"
      :was_run: 
    - :content: "                     })"
      :was_run: 
    - :content: '      context "with empty year" do'
      :was_run: 1
    - :content: "        let(:empty_stats) { wilson.stats_for_year(1966) }"
      :was_run: 1
    - :content: '        it "returns nil" do'
      :was_run: 1
    - :content: "          # HATE returning nil, but I've designed West-facing code,"
      :was_run: 
    - :content: "          # so it's unavoidable until I repent :'-("
      :was_run: 
    - :content: "          empty_stats.should be_nil"
      :was_run: 1
    - :content: "        end"
      :was_run: 
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#stats_for_league_and_year" do'
      :was_run: 1
    - :content: '      let(:wilson_al_2009_stats) { wilson.stats_for_league_and_year("AL",
        2009) }'
      :was_run: 1
    - :content: '      spec_stats_for("Josh Wilson 2009 AL stats", "wilson_al_2009_stats",
        {'
      :was_run: 1
    - :content: "                       games: 45,"
      :was_run: 
    - :content: "                       at_bats: 128,"
      :was_run: 
    - :content: "                       runs: 16,"
      :was_run: 
    - :content: "                       hits: 32,"
      :was_run: 
    - :content: "                       doubles: 8,"
      :was_run: 
    - :content: "                       triples: 1,"
      :was_run: 
    - :content: "                       home_runs: 3,"
      :was_run: 
    - :content: "                       runs_batted_in: 10,"
      :was_run: 
    - :content: "                       stolen_bases: 1,"
      :was_run: 
    - :content: "                       caught_stealing: 2,"
      :was_run: 
    - :content: "                       batting_average: 0.250"
      :was_run: 
    - :content: "                       })"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods: {}
  "./spec/lib/batting_data_spec.rb":
    :lines:
    - :content: require 'spec_helper'
      :was_run: 1
    - :content: require_relative '../../lib/batting_data'
      :was_run: 1
    - :content: describe BattingData do
      :was_run: 1
    - :content: "  before(:each) do"
      :was_run: 1
    - :content: '    batter = double("Batter")'
      :was_run: 1
    - :content: "    Batter.stub(:find_by_id).and_return(batter)"
      :was_run: 1
    - :content: "  end"
      :was_run: 
    - :content: '  context "with test batter double" do'
      :was_run: 1
    - :content: "    # This context and the next 4 lines of code are the first whiff
        of"
      :was_run: 
    - :content: "    # a testing smell caused by BattingData being able to talk"
      :was_run: 
    - :content: "    # directly to Batter. In a much larger application, I would inject"
      :was_run: 
    - :content: "    # a connection service that we could mock and stub to our heart's"
      :was_run: 
    - :content: "    # content. For now, it's only 3 tests that do this, so... eh.
        Put"
      :was_run: 
    - :content: '    # ''em in a crappy "with test double" context and call it good'
      :was_run: 
    - :content: "    # enough for now"
      :was_run: 
    - :content: '    let(:batter) { Batter.new(id: "test", last_name: "Tester", first_name:
        "Testy") }'
      :was_run: 1
    - :content: "    before(:each) do"
      :was_run: 1
    - :content: '      Batter.stub(:find).with(id: "test").and_return batter'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#batting_average" do'
      :was_run: 1
    - :content: '      let(:batting_data) { BattingData.new player_id: "test", at_bats:
        100, hits: 20 }'
      :was_run: 1
    - :content: '      it "calculates hits / at_bats" do'
      :was_run: 1
    - :content: "        batting_data.batting_average.should be_within(0.0005).of(0.200)"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#slugging_percentage" do'
      :was_run: 1
    - :content: '      let(:batting_data) { BattingData.new player_id: "test", at_bats:
        100, hits: 20, doubles: 6, triples: 2, home_runs: 1 }'
      :was_run: 1
    - :content: '      it "calculates slugging percentage" do'
      :was_run: 1
    - :content: "        batting_data.slugging_percentage.should be_within(0.0005).of(0.330)"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    describe "#+" do'
      :was_run: 1
    - :content: '      let(:one) { BattingData.new Hash.new(1).merge({player_id: "test"})
        }'
      :was_run: 1
    - :content: '      let(:two) { BattingData.new Hash.new(2).merge({player_id: "test"})
        }'
      :was_run: 1
    - :content: "      let(:three) { one + two }"
      :was_run: 1
    - :content: '      it "sums the BattingData data" do'
      :was_run: 1
    - :content: '        three.player_id.should == "test"'
      :was_run: 1
    - :content: "        three.year.should == 1"
      :was_run: 1
    - :content: "        three.league.should == 1"
      :was_run: 1
    - :content: "        three.games.should == 3"
      :was_run: 1
    - :content: "        three.at_bats.should == 3"
      :was_run: 1
    - :content: "        three.runs.should == 3"
      :was_run: 1
    - :content: "        three.hits.should == 3"
      :was_run: 1
    - :content: "        three.doubles.should == 3"
      :was_run: 1
    - :content: "        three.triples.should == 3"
      :was_run: 1
    - :content: "        three.home_runs.should == 3"
      :was_run: 1
    - :content: "        three.runs_batted_in.should == 3"
      :was_run: 1
    - :content: "        three.stolen_bases.should == 3"
      :was_run: 1
    - :content: "        three.caught_stealing.should == 3"
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods: {}
  "./spec/lib/stats_grinder_spec.rb":
    :lines:
    - :content: require 'spec_helper'
      :was_run: 1
    - :content: require_relative '../../lib/stats_grinder'
      :was_run: 1
    - :content: describe StatsGrinder do
      :was_run: 1
    - :content: "  let(:stats_grinder) { StatsGrinder.new }"
      :was_run: 1
    - :content: '  describe "#most_improved_batter" do'
      :was_run: 1
    - :content: '    it "finds most improved batter between years" do'
      :was_run: 1
    - :content: '      stats_grinder.most_improved_batter(2008, 2010).name.should
        == "Carlos Gonzalez"'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: '  describe "#team_members_for_year(team, year)" do'
      :was_run: 1
    - :content: '    it "asks Batter to find_all by team and year" do'
      :was_run: 1
    - :content: "      team = []"
      :was_run: 1
    - :content: '      Batter.should_receive(:find_all).with(team: "SEA", year: 2008).and_return(team)'
      :was_run: 1
    - :content: '      stats_grinder.team_members_for_year("SEA", 2008)'
      :was_run: 1
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: '  describe "#triple_crown_winner_in_league_for(team, year)" do'
      :was_run: 1
    - :content: '    context "when a single batter leads the league for batting average,
        home runs and RBI" do'
      :was_run: 1
    - :content: '      let(:winner) { double("Batter", stats_for_league_and_year:
        double("BattingData", at_bats: 1000, hits: 500, home_runs: 100, runs_batted_in:
        100, batting_average: 0.500)) }'
      :was_run: 1
    - :content: '      let(:not_enough_plate_appearances) { double("Batter", stats_for_league_and_year:
        double("BattingData", at_bats: 200, hits: 200, home_runs: 200, runs_batted_in:
        600, batting_average: 1.000)) }'
      :was_run: 1
    - :content: '      it "reports winner" do'
      :was_run: 1
    - :content: '        Batter.should_receive(:find_all).with(league: "NL", year:
        2009).and_return [winner]'
      :was_run: 1
    - :content: '        stats_grinder.triple_crown_winner_in_league_for("NL", 2009).should
        == winner'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: '      it "ignores batters with fewer than 400 at_bats" do'
      :was_run: 1
    - :content: '        Batter.should_receive(:find_all).with(league: "NL", year:
        2009).and_return [not_enough_plate_appearances, winner]'
      :was_run: 1
    - :content: '        stats_grinder.triple_crown_winner_in_league_for("NL", 2009).should
        == winner'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: '    context "when no single winner is found" do'
      :was_run: 1
    - :content: '      let(:best_hitter) { double("Batter", stats_for_league_and_year:
        double("BattingData", at_bats: 500, hits: 500, home_runs: 0, runs_batted_in:
        0, batting_average: 1.0)) }'
      :was_run: 1
    - :content: '      let(:best_slugger) { double("Batter", stats_for_league_and_year:
        double("BattingData", at_bats: 1000, hits: 500, home_runs: 500, runs_batted_in:
        0, batting_average: 0.500)) }'
      :was_run: 1
    - :content: '      let(:best_rbier) { double("Batter", stats_for_league_and_year:
        double("BattingData", at_bats: 1000, hits: 500, home_runs: 0, runs_batted_in:
        1500, batting_average: 0.5)) }'
      :was_run: 1
    - :content: '      it "returns no winner" do'
      :was_run: 1
    - :content: "        players = [best_hitter, best_slugger, best_rbier]"
      :was_run: 1
    - :content: '        Batter.should_receive(:find_all).with(league: "NL", year:
        2009).and_return(players)'
      :was_run: 1
    - :content: '        stats_grinder.triple_crown_winner_in_league_for("NL", 2009).should
        be_nil'
      :was_run: 1
    - :content: "      end"
      :was_run: 
    - :content: "    end"
      :was_run: 
    - :content: "  end"
      :was_run: 
    - :content: end
      :was_run: 
    :percent_run: 100
    :methods: {}
  :global_percent_run: 100.0
:hotspots:
  files:
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:44
      file_name: lib/batting_data.rb
      line_number: '44'
      hash_key: '["lib/batting_data.rb:44", nil, nil]'
    details:
      flog: complexity is 24.0
      saikuro: complexity is 3.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:44
      file_name: lib/batboy.rb
      line_number: '44'
      hash_key: '["lib/batboy.rb:44", nil, nil]'
    details:
      flog: complexity is 23.2
      saikuro: complexity is 3.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:127
      file_name: lib/batter.rb
      line_number: '127'
      hash_key: '["lib/batter.rb:127", nil, nil]'
    details:
      flog: complexity is 22.6
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:34
      file_name: lib/stats_grinder.rb
      line_number: '34'
      hash_key: '["lib/stats_grinder.rb:34", nil, nil]'
    details:
      flog: complexity is 17.5
      saikuro: complexity is 5.0
  - location:
      class_name: 
      method_name: 
      file_path: "./lib/batter.rb"
      file_name: "./lib/batter.rb"
      line_number: 
      hash_key: '["./lib/batter.rb", nil, nil]'
    details:
      rcov: average uncovered code is 22.5%
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:16
      file_name: lib/batting_data.rb
      line_number: '16'
      hash_key: '["lib/batting_data.rb:16", nil, nil]'
    details:
      flog: complexity is 18.8
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:64
      file_name: lib/batter.rb
      line_number: '64'
      hash_key: '["lib/batter.rb:64", nil, nil]'
    details:
      flog: complexity is 15.9
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:60
      file_name: lib/batting_data.rb
      line_number: '60'
      hash_key: '["lib/batting_data.rb:60", nil, nil]'
    details:
      flog: complexity is 16.5
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:186
      file_name: lib/batter.rb
      line_number: '186'
      hash_key: '["lib/batter.rb:186", nil, nil]'
    details:
      flog: complexity is 16.6
  - location:
      class_name: 
      method_name: 
      file_path: "./lib/batting_data.rb"
      file_name: "./lib/batting_data.rb"
      line_number: 
      hash_key: '["./lib/batting_data.rb", nil, nil]'
    details:
      saikuro: complexity is 1.0
      rcov: average uncovered code is 15.1%
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:14
      file_name: lib/batter.rb
      line_number: '14'
      hash_key: '["lib/batter.rb:14", nil, nil]'
    details:
      flog: complexity is 11.2
      saikuro: complexity is 4.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:36
      file_name: lib/batboy.rb
      line_number: '36'
      hash_key: '["lib/batboy.rb:36", nil, nil]'
    details:
      flog: complexity is 13.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:57
      file_name: lib/batboy.rb
      line_number: '57'
      hash_key: '["lib/batboy.rb:57", nil, nil]'
    details:
      flog: complexity is 11.5
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:91
      file_name: lib/stats_grinder.rb
      line_number: '91'
      hash_key: '["lib/stats_grinder.rb:91", nil, nil]'
    details:
      flog: complexity is 9.1
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:64
      file_name: lib/batting_data.rb
      line_number: '64'
      hash_key: '["lib/batting_data.rb:64", nil, nil]'
    details:
      flog: complexity is 10.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:112
      file_name: lib/batter.rb
      line_number: '112'
      hash_key: '["lib/batter.rb:112", nil, nil]'
    details:
      flog: complexity is 11.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:106
      file_name: lib/batter.rb
      line_number: '106'
      hash_key: '["lib/batter.rb:106", nil, nil]'
    details:
      flog: complexity is 11.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:100
      file_name: lib/batter.rb
      line_number: '100'
      hash_key: '["lib/batter.rb:100", nil, nil]'
    details:
      flog: complexity is 11.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:201
      file_name: lib/batter.rb
      line_number: '201'
      hash_key: '["lib/batter.rb:201", nil, nil]'
    details:
      flog: complexity is 8.5
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:40
      file_name: lib/batter.rb
      line_number: '40'
      hash_key: '["lib/batter.rb:40", nil, nil]'
    details:
      flog: complexity is 9.9
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:37
      file_name: lib/batting_data.rb
      line_number: '37'
      hash_key: '["lib/batting_data.rb:37", nil, nil]'
    details:
      flog: complexity is 7.7
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb:32
      file_name: lib/batting_data.rb
      line_number: '32'
      hash_key: '["lib/batting_data.rb:32", nil, nil]'
    details:
      flog: complexity is 7.7
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:16
      file_name: lib/stats_grinder.rb
      line_number: '16'
      hash_key: '["lib/stats_grinder.rb:16", nil, nil]'
    details:
      flog: complexity is 8.6
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:99
      file_name: lib/stats_grinder.rb
      line_number: '99'
      hash_key: '["lib/stats_grinder.rb:99", nil, nil]'
    details:
      flog: complexity is 6.3
      saikuro: complexity is 3.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:207
      file_name: lib/batter.rb
      line_number: '207'
      hash_key: '["lib/batter.rb:207", nil, nil]'
    details:
      flog: complexity is 7.1
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: "./lib/stats_grinder.rb"
      file_name: "./lib/stats_grinder.rb"
      line_number: 
      hash_key: '["./lib/stats_grinder.rb", nil, nil]'
    details:
      rcov: average uncovered code is 8.8%
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:73
      file_name: lib/stats_grinder.rb
      line_number: '73'
      hash_key: '["lib/stats_grinder.rb:73", nil, nil]'
    details:
      flog: complexity is 7.4
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:74
      file_name: lib/batter.rb
      line_number: '74'
      hash_key: '["lib/batter.rb:74", nil, nil]'
    details:
      flog: complexity is 4.8
      saikuro: complexity is 3.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:84
      file_name: lib/stats_grinder.rb
      line_number: '84'
      hash_key: '["lib/stats_grinder.rb:84", nil, nil]'
    details:
      flog: complexity is 5.8
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:80
      file_name: lib/stats_grinder.rb
      line_number: '80'
      hash_key: '["lib/stats_grinder.rb:80", nil, nil]'
    details:
      flog: complexity is 5.8
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:215
      file_name: lib/batter.rb
      line_number: '215'
      hash_key: '["lib/batter.rb:215", nil, nil]'
    details:
      flog: complexity is 5.5
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:89
      file_name: lib/batter.rb
      line_number: '89'
      hash_key: '["lib/batter.rb:89", nil, nil]'
    details:
      flog: complexity is 6.3
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:224
      file_name: lib/batter.rb
      line_number: '224'
      hash_key: '["lib/batter.rb:224", nil, nil]'
    details:
      flog: complexity is 4.0
      saikuro: complexity is 2.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:10
      file_name: lib/batboy.rb
      line_number: '10'
      hash_key: '["lib/batboy.rb:10", nil, nil]'
    details:
      flog: complexity is 4.5
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:60
      file_name: lib/batter.rb
      line_number: '60'
      hash_key: '["lib/batter.rb:60", nil, nil]'
    details:
      flog: complexity is 3.9
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:52
      file_name: lib/batter.rb
      line_number: '52'
      hash_key: '["lib/batter.rb:52", nil, nil]'
    details:
      flog: complexity is 3.7
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:48
      file_name: lib/batter.rb
      line_number: '48'
      hash_key: '["lib/batter.rb:48", nil, nil]'
    details:
      flog: complexity is 3.7
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:32
      file_name: lib/batter.rb
      line_number: '32'
      hash_key: '["lib/batter.rb:32", nil, nil]'
    details:
      flog: complexity is 3.9
  - location:
      class_name: 
      method_name: 
      file_path: "./lib/batboy.rb"
      file_name: "./lib/batboy.rb"
      line_number: 
      hash_key: '["./lib/batboy.rb", nil, nil]'
    details:
      rcov: average uncovered code is 3.6%
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", nil, nil]'
    details:
      churn: detected high level of churn (changed 11 times)
      flay: found 1 code duplications
      saikuro: average complexity is 2.1
      reek: found 12 code smells
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:197
      file_name: lib/batter.rb
      line_number: '197'
      hash_key: '["lib/batter.rb:197", nil, nil]'
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:233
      file_name: lib/batter.rb
      line_number: '233'
      hash_key: '["lib/batter.rb:233", nil, nil]'
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb:22
      file_name: lib/batboy.rb
      line_number: '22'
      hash_key: '["lib/batboy.rb:22", nil, nil]'
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:56
      file_name: lib/batter.rb
      line_number: '56'
      hash_key: '["lib/batter.rb:56", nil, nil]'
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/csv_reader.rb:13
      file_name: lib/csv_reader.rb
      line_number: '13'
      hash_key: '["lib/csv_reader.rb:13", nil, nil]'
    details:
      flog: complexity is 1.6
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:36
      file_name: lib/batter.rb
      line_number: '36'
      hash_key: '["lib/batter.rb:36", nil, nil]'
    details:
      flog: complexity is 2.4
  - location:
      class_name: 
      method_name: 
      file_path: lib/csv_reader.rb:9
      file_name: lib/csv_reader.rb
      line_number: '9'
      hash_key: '["lib/csv_reader.rb:9", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/csv_reader.rb:5
      file_name: lib/csv_reader.rb
      line_number: '5'
      hash_key: '["lib/csv_reader.rb:5", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb:30
      file_name: lib/stats_grinder.rb
      line_number: '30'
      hash_key: '["lib/stats_grinder.rb:30", nil, nil]'
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
  - location:
      class_name: 
      method_name: 
      file_path: lib/batter.rb:120
      file_name: lib/batter.rb
      line_number: '120'
      hash_key: '["lib/batter.rb:120", nil, nil]'
    details:
      flog: complexity is 1.3
  - location:
      class_name: 
      method_name: 
      file_path: lib/stats_grinder.rb
      file_name: lib/stats_grinder.rb
      line_number: 
      hash_key: '["lib/stats_grinder.rb", nil, nil]'
    details:
      reek: found 24 code smells
  - location:
      class_name: 
      method_name: 
      file_path: lib/batting_data.rb
      file_name: lib/batting_data.rb
      line_number: 
      hash_key: '["lib/batting_data.rb", nil, nil]'
    details:
      flay: found 1 code duplications
      reek: found 2 code smells
  - location:
      class_name: 
      method_name: 
      file_path: "./lib/csv_reader.rb"
      file_name: "./lib/csv_reader.rb"
      line_number: 
      hash_key: '["./lib/csv_reader.rb", nil, nil]'
    details:
      rcov: average uncovered code is 0.0%
  - location:
      class_name: 
      method_name: 
      file_path: lib/batboy.rb
      file_name: lib/batboy.rb
      line_number: 
      hash_key: '["lib/batboy.rb", nil, nil]'
    details:
      reek: found 1 code smells
  classes:
  - location:
      class_name: Batter
      method_name: 
      file_path: lib/batter.rb:127
      file_name: lib/batter.rb
      line_number: '127'
      hash_key: '["lib/batter.rb:127", "Batter", nil]'
    details:
      flog: average complexity is 8.1
      saikuro: average complexity is 1.9
      reek: found 8 code smells
      rcov: average uncovered code is 22.5%
  - location:
      class_name: BattingData
      method_name: 
      file_path: lib/batting_data.rb:44
      file_name: lib/batting_data.rb
      line_number: '44'
      hash_key: '["lib/batting_data.rb:44", "BattingData", nil]'
    details:
      flog: average complexity is 12.6
      saikuro: average complexity is 1.7
      reek: found 2 code smells
      rcov: average uncovered code is 15.1%
  - location:
      class_name: StatsGrinder
      method_name: 
      file_path: lib/stats_grinder.rb:34
      file_name: lib/stats_grinder.rb
      line_number: '34'
      hash_key: '["lib/stats_grinder.rb:34", "StatsGrinder", nil]'
    details:
      flog: average complexity is 7.0
      saikuro: average complexity is 2.1
      reek: found 24 code smells
      rcov: average uncovered code is 8.8%
  - location:
      class_name: Batboy
      method_name: 
      file_path: lib/batboy.rb:44
      file_name: lib/batboy.rb
      line_number: '44'
      hash_key: '["lib/batboy.rb:44", "Batboy", nil]'
    details:
      flog: average complexity is 9.3
      saikuro: average complexity is 1.6
      reek: found 1 code smells
      rcov: average uncovered code is 3.6%
  - location:
      class_name: main
      method_name: 
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "main", nil]'
    details:
      flog: complexity is 10.9
  - location:
      class_name: CsvReader
      method_name: 
      file_path: lib/csv_reader.rb:13
      file_name: lib/csv_reader.rb
      line_number: '13'
      hash_key: '["lib/csv_reader.rb:13", "CsvReader", nil]'
    details:
      flog: average complexity is 1.3
      saikuro: average complexity is 1.0
      rcov: average uncovered code is 0.0%
  - location:
      class_name: Batter#self
      method_name: 
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter#self", nil]'
    details:
      reek: found 4 code smells
  methods:
  - location:
      class_name: Batter
      method_name: Batter#batting_data_keys
      file_path: "./lib/batter.rb"
      file_name: "./lib/batter.rb"
      line_number: 
      hash_key: '["./lib/batter.rb", "Batter", "Batter#batting_data_keys"]'
      simple_method_name: "#batting_data_keys"
    details:
      rcov: uncovered code is 87.5%
  - location:
      class_name: Batter
      method_name: Batter#stats_for_league_and_year
      file_path: lib/batter.rb:64
      file_name: lib/batter.rb
      line_number: '64'
      hash_key: '["lib/batter.rb:64", "Batter", "Batter#stats_for_league_and_year"]'
      simple_method_name: "#stats_for_league_and_year"
    details:
      flog: complexity is 15.9
      saikuro: complexity is 2.0
      reek: found 1 code smells
      rcov: uncovered code is 62.5%
  - location:
      class_name: BattingData
      method_name: BattingData#+
      file_path: lib/batting_data.rb:44
      file_name: lib/batting_data.rb
      line_number: '44'
      hash_key: '["lib/batting_data.rb:44", "BattingData", "BattingData#+"]'
      simple_method_name: "#+"
    details:
      flog: complexity is 24.0
      saikuro: complexity is 3.0
      reek: found 2 code smells
      rcov: uncovered code is 45.5%
  - location:
      class_name: Batter
      method_name: Batter#load_batter_data
      file_path: lib/batter.rb:127
      file_name: lib/batter.rb
      line_number: '127'
      hash_key: '["lib/batter.rb:127", "Batter", "Batter#load_batter_data"]'
      simple_method_name: "#load_batter_data"
    details:
      flog: complexity is 22.6
      rcov: uncovered code is 50.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#triple_crown_winner_in_league_for
      file_path: lib/stats_grinder.rb:34
      file_name: lib/stats_grinder.rb
      line_number: '34'
      hash_key: '["lib/stats_grinder.rb:34", "StatsGrinder", "StatsGrinder#triple_crown_winner_in_league_for"]'
      simple_method_name: "#triple_crown_winner_in_league_for"
    details:
      flog: complexity is 17.5
      saikuro: complexity is 5.0
      reek: found 5 code smells
      rcov: uncovered code is 45.0%
  - location:
      class_name: Batter
      method_name: Batter#all_batting_data_for_league
      file_path: lib/batter.rb:233
      file_name: lib/batter.rb
      line_number: '233'
      hash_key: '["lib/batter.rb:233", "Batter", "Batter#all_batting_data_for_league"]'
      simple_method_name: "#all_batting_data_for_league"
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
      reek: found 2 code smells
      rcov: uncovered code is 60.0%
  - location:
      class_name: Batter
      method_name: Batter#find_all_by_team_and_year
      file_path: lib/batter.rb:106
      file_name: lib/batter.rb
      line_number: '106'
      hash_key: '["lib/batter.rb:106", "Batter", "Batter#find_all_by_team_and_year"]'
      simple_method_name: "#find_all_by_team_and_year"
    details:
      flog: complexity is 11.0
      rcov: uncovered code is 50.0%
  - location:
      class_name: Batter
      method_name: Batter#find_all_by_year
      file_path: lib/batter.rb:100
      file_name: lib/batter.rb
      line_number: '100'
      hash_key: '["lib/batter.rb:100", "Batter", "Batter#find_all_by_year"]'
      simple_method_name: "#find_all_by_year"
    details:
      flog: complexity is 11.0
      rcov: uncovered code is 50.0%
  - location:
      class_name: Batter
      method_name: Batter#find_all_by_league_and_year
      file_path: lib/batter.rb:112
      file_name: lib/batter.rb
      line_number: '112'
      hash_key: '["lib/batter.rb:112", "Batter", "Batter#find_all_by_league_and_year"]'
      simple_method_name: "#find_all_by_league_and_year"
    details:
      flog: complexity is 11.0
      rcov: uncovered code is 50.0%
  - location:
      class_name: BattingData
      method_name: BattingData#integrable_stats
      file_path: "./lib/batting_data.rb"
      file_name: "./lib/batting_data.rb"
      line_number: 
      hash_key: '["./lib/batting_data.rb", "BattingData", "BattingData#integrable_stats"]'
      simple_method_name: "#integrable_stats"
    details:
      saikuro: complexity is 1.0
      rcov: uncovered code is 60.0%
  - location:
      class_name: Batter
      method_name: Batter#played_any_games_for_team_in_year?
      file_path: lib/batter.rb:201
      file_name: lib/batter.rb
      line_number: '201'
      hash_key: '["lib/batter.rb:201", "Batter", "Batter#played_any_games_for_team_in_year?"]'
      simple_method_name: "#played_any_games_for_team_in_year?"
    details:
      flog: complexity is 8.5
      saikuro: complexity is 2.0
      rcov: uncovered code is 40.0%
  - location:
      class_name: Batter
      method_name: Batter#played_any_games_in_league_in_year?
      file_path: lib/batter.rb:207
      file_name: lib/batter.rb
      line_number: '207'
      hash_key: '["lib/batter.rb:207", "Batter", "Batter#played_any_games_in_league_in_year?"]'
      simple_method_name: "#played_any_games_in_league_in_year?"
    details:
      flog: complexity is 7.1
      saikuro: complexity is 2.0
      rcov: uncovered code is 40.0%
  - location:
      class_name: Batboy
      method_name: Batboy#report_slugging_percentage_roster_for
      file_path: lib/batboy.rb:44
      file_name: lib/batboy.rb
      line_number: '44'
      hash_key: '["lib/batboy.rb:44", "Batboy", "Batboy#report_slugging_percentage_roster_for"]'
      simple_method_name: "#report_slugging_percentage_roster_for"
    details:
      flog: complexity is 23.2
      saikuro: complexity is 3.0
      reek: found 1 code smells
      rcov: uncovered code is 18.2%
  - location:
      class_name: Batter
      method_name: Batter#add_batting_data
      file_path: lib/batter.rb:89
      file_name: lib/batter.rb
      line_number: '89'
      hash_key: '["lib/batter.rb:89", "Batter", "Batter#add_batting_data"]'
      simple_method_name: "#add_batting_data"
    details:
      flog: complexity is 6.3
      saikuro: complexity is 1.0
      reek: found 1 code smells
      rcov: uncovered code is 33.3%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#batter_improvement
      file_path: lib/stats_grinder.rb:73
      file_name: lib/stats_grinder.rb
      line_number: '73'
      hash_key: '["lib/stats_grinder.rb:73", "StatsGrinder", "StatsGrinder#batter_improvement"]'
      simple_method_name: "#batter_improvement"
    details:
      flog: complexity is 7.4
      saikuro: complexity is 1.0
      reek: found 2 code smells
      rcov: uncovered code is 25.0%
  - location:
      class_name: Batter
      method_name: Batter#find_all
      file_path: lib/batter.rb:40
      file_name: lib/batter.rb
      line_number: '40'
      hash_key: '["lib/batter.rb:40", "Batter", "Batter#find_all"]'
      simple_method_name: "#find_all"
    details:
      flog: complexity is 9.9
      rcov: uncovered code is 16.7%
  - location:
      class_name: Batter
      method_name: Batter#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "Batter", "Batter#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 22.0
  - location:
      class_name: BattingData
      method_name: BattingData#initialize
      file_path: lib/batting_data.rb:16
      file_name: lib/batting_data.rb
      line_number: '16'
      hash_key: '["lib/batting_data.rb:16", "BattingData", "BattingData#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 18.8
      saikuro: complexity is 2.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: BattingData
      method_name: BattingData#bases_advanced
      file_path: lib/batting_data.rb:60
      file_name: lib/batting_data.rb
      line_number: '60'
      hash_key: '["lib/batting_data.rb:60", "BattingData", "BattingData#bases_advanced"]'
      simple_method_name: "#bases_advanced"
    details:
      flog: complexity is 16.5
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#load_batting_data
      file_path: lib/batter.rb:186
      file_name: lib/batter.rb
      line_number: '186'
      hash_key: '["lib/batter.rb:186", "Batter", "Batter#load_batting_data"]'
      simple_method_name: "#load_batting_data"
    details:
      flog: complexity is 16.6
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#initialize
      file_path: lib/batter.rb:14
      file_name: lib/batter.rb
      line_number: '14'
      hash_key: '["lib/batter.rb:14", "Batter", "Batter#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 11.2
      saikuro: complexity is 4.0
      reek: found 3 code smells
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batboy
      method_name: Batboy#report_most_improved_batter_in
      file_path: lib/batboy.rb:36
      file_name: lib/batboy.rb
      line_number: '36'
      hash_key: '["lib/batboy.rb:36", "Batboy", "Batboy#report_most_improved_batter_in"]'
      simple_method_name: "#report_most_improved_batter_in"
    details:
      flog: complexity is 13.1
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batboy
      method_name: Batboy#report_triple_crown_winner_in_league_for
      file_path: lib/batboy.rb:57
      file_name: lib/batboy.rb
      line_number: '57'
      hash_key: '["lib/batboy.rb:57", "Batboy", "Batboy#report_triple_crown_winner_in_league_for"]'
      simple_method_name: "#report_triple_crown_winner_in_league_for"
    details:
      flog: complexity is 11.5
      saikuro: complexity is 2.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#common_batters
      file_path: lib/stats_grinder.rb:91
      file_name: lib/stats_grinder.rb
      line_number: '91'
      hash_key: '["lib/stats_grinder.rb:91", "StatsGrinder", "StatsGrinder#common_batters"]'
      simple_method_name: "#common_batters"
    details:
      flog: complexity is 9.1
      saikuro: complexity is 2.0
      reek: found 7 code smells
      rcov: uncovered code is 0.0%
  - location:
      class_name: BattingData
      method_name: BattingData#singles
      file_path: lib/batting_data.rb:64
      file_name: lib/batting_data.rb
      line_number: '64'
      hash_key: '["lib/batting_data.rb:64", "BattingData", "BattingData#singles"]'
      simple_method_name: "#singles"
    details:
      flog: complexity is 10.1
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: main
      method_name: main#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "main", "main#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 10.9
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#most_improved_batter
      file_path: lib/stats_grinder.rb:16
      file_name: lib/stats_grinder.rb
      line_number: '16'
      hash_key: '["lib/stats_grinder.rb:16", "StatsGrinder", "StatsGrinder#most_improved_batter"]'
      simple_method_name: "#most_improved_batter"
    details:
      flog: complexity is 8.6
      saikuro: complexity is 1.0
      reek: found 3 code smells
      rcov: uncovered code is 0.0%
  - location:
      class_name: BattingData
      method_name: BattingData#slugging_percentage
      file_path: lib/batting_data.rb:37
      file_name: lib/batting_data.rb
      line_number: '37'
      hash_key: '["lib/batting_data.rb:37", "BattingData", "BattingData#slugging_percentage"]'
      simple_method_name: "#slugging_percentage"
    details:
      flog: complexity is 7.7
      saikuro: complexity is 2.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: BattingData
      method_name: BattingData#batting_average
      file_path: lib/batting_data.rb:32
      file_name: lib/batting_data.rb
      line_number: '32'
      hash_key: '["lib/batting_data.rb:32", "BattingData", "BattingData#batting_average"]'
      simple_method_name: "#batting_average"
    details:
      flog: complexity is 7.7
      saikuro: complexity is 2.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#most_improved
      file_path: lib/stats_grinder.rb:99
      file_name: lib/stats_grinder.rb
      line_number: '99'
      hash_key: '["lib/stats_grinder.rb:99", "StatsGrinder", "StatsGrinder#most_improved"]'
      simple_method_name: "#most_improved"
    details:
      flog: complexity is 6.3
      saikuro: complexity is 3.0
      reek: found 1 code smells
      rcov: uncovered code is 0.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#with_at_least_400_at_bats_in_league
      file_path: lib/stats_grinder.rb:84
      file_name: lib/stats_grinder.rb
      line_number: '84'
      hash_key: '["lib/stats_grinder.rb:84", "StatsGrinder", "StatsGrinder#with_at_least_400_at_bats_in_league"]'
      simple_method_name: "#with_at_least_400_at_bats_in_league"
    details:
      flog: complexity is 5.8
      saikuro: complexity is 2.0
      reek: found 3 code smells
      rcov: uncovered code is 0.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#with_at_least_200_at_bats
      file_path: lib/stats_grinder.rb:80
      file_name: lib/stats_grinder.rb
      line_number: '80'
      hash_key: '["lib/stats_grinder.rb:80", "StatsGrinder", "StatsGrinder#with_at_least_200_at_bats"]'
      simple_method_name: "#with_at_least_200_at_bats"
    details:
      flog: complexity is 5.8
      saikuro: complexity is 2.0
      reek: found 3 code smells
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#played_any_games?
      file_path: lib/batter.rb:74
      file_name: lib/batter.rb
      line_number: '74'
      hash_key: '["lib/batter.rb:74", "Batter", "Batter#played_any_games?"]'
      simple_method_name: "#played_any_games?"
    details:
      flog: complexity is 4.8
      saikuro: complexity is 3.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#all_batting_data_ever
      file_path: lib/batter.rb:215
      file_name: lib/batter.rb
      line_number: '215'
      hash_key: '["lib/batter.rb:215", "Batter", "Batter#all_batting_data_ever"]'
      simple_method_name: "#all_batting_data_ever"
    details:
      flog: complexity is 5.5
      saikuro: complexity is 2.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#all_batting_data_for_year
      file_path: lib/batter.rb:224
      file_name: lib/batter.rb
      line_number: '224'
      hash_key: '["lib/batter.rb:224", "Batter", "Batter#all_batting_data_for_year"]'
      simple_method_name: "#all_batting_data_for_year"
    details:
      flog: complexity is 4.0
      saikuro: complexity is 2.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batboy
      method_name: Batboy#initialize
      file_path: lib/batboy.rb:10
      file_name: lib/batboy.rb
      line_number: '10'
      hash_key: '["lib/batboy.rb:10", "Batboy", "Batboy#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 4.5
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#stats_for_year
      file_path: lib/batter.rb:60
      file_name: lib/batter.rb
      line_number: '60'
      hash_key: '["lib/batter.rb:60", "Batter", "Batter#stats_for_year"]'
      simple_method_name: "#stats_for_year"
    details:
      flog: complexity is 3.9
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#name
      file_path: lib/batter.rb:48
      file_name: lib/batter.rb
      line_number: '48'
      hash_key: '["lib/batter.rb:48", "Batter", "Batter#name"]'
      simple_method_name: "#name"
    details:
      flog: complexity is 3.7
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#sortable_name
      file_path: lib/batter.rb:52
      file_name: lib/batter.rb
      line_number: '52'
      hash_key: '["lib/batter.rb:52", "Batter", "Batter#sortable_name"]'
      simple_method_name: "#sortable_name"
    details:
      flog: complexity is 3.7
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#self.load_batter_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.load_batter_data"]'
      simple_method_name: "#self.load_batter_data"
    details:
      saikuro: complexity is 4.0
      reek: found 3 code smells
  - location:
      class_name: Batter
      method_name: Batter#self.find_all
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all"]'
      simple_method_name: "#self.find_all"
    details:
      saikuro: complexity is 4.0
  - location:
      class_name: Batter
      method_name: Batter#first
      file_path: lib/batter.rb:32
      file_name: lib/batter.rb
      line_number: '32'
      hash_key: '["lib/batter.rb:32", "Batter", "Batter#first"]'
      simple_method_name: "#first"
    details:
      flog: complexity is 3.9
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#played_any_games_in_year?
      file_path: lib/batter.rb:197
      file_name: lib/batter.rb
      line_number: '197'
      hash_key: '["lib/batter.rb:197", "Batter", "Batter#played_any_games_in_year?"]'
      simple_method_name: "#played_any_games_in_year?"
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batboy
      method_name: Batboy#report_all_done
      file_path: lib/batboy.rb:22
      file_name: lib/batboy.rb
      line_number: '22'
      hash_key: '["lib/batboy.rb:22", "Batboy", "Batboy#report_all_done"]'
      simple_method_name: "#report_all_done"
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#years
      file_path: lib/batter.rb:56
      file_name: lib/batter.rb
      line_number: '56'
      hash_key: '["lib/batter.rb:56", "Batter", "Batter#years"]'
      simple_method_name: "#years"
    details:
      flog: complexity is 2.4
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: BattingData
      method_name: BattingData#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "BattingData", "BattingData#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 3.3
  - location:
      class_name: Batter
      method_name: Batter#self.load_batting_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.load_batting_data"]'
      simple_method_name: "#self.load_batting_data"
    details:
      saikuro: complexity is 3.0
      reek: found 1 code smells
  - location:
      class_name: CsvReader
      method_name: CsvReader#data
      file_path: lib/csv_reader.rb:13
      file_name: lib/csv_reader.rb
      line_number: '13'
      hash_key: '["lib/csv_reader.rb:13", "CsvReader", "CsvReader#data"]'
      simple_method_name: "#data"
    details:
      flog: complexity is 1.6
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#find
      file_path: lib/batter.rb:36
      file_name: lib/batter.rb
      line_number: '36'
      hash_key: '["lib/batter.rb:36", "Batter", "Batter#find"]'
      simple_method_name: "#find"
    details:
      flog: complexity is 2.4
      rcov: uncovered code is 0.0%
  - location:
      class_name: CsvReader
      method_name: CsvReader#all
      file_path: lib/csv_reader.rb:9
      file_name: lib/csv_reader.rb
      line_number: '9'
      hash_key: '["lib/csv_reader.rb:9", "CsvReader", "CsvReader#all"]'
      simple_method_name: "#all"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#team_members_for_year
      file_path: lib/stats_grinder.rb:30
      file_name: lib/stats_grinder.rb
      line_number: '30'
      hash_key: '["lib/stats_grinder.rb:30", "StatsGrinder", "StatsGrinder#team_members_for_year"]'
      simple_method_name: "#team_members_for_year"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: CsvReader
      method_name: CsvReader#initialize
      file_path: lib/csv_reader.rb:5
      file_name: lib/csv_reader.rb
      line_number: '5'
      hash_key: '["lib/csv_reader.rb:5", "CsvReader", "CsvReader#initialize"]'
      simple_method_name: "#initialize"
    details:
      flog: complexity is 1.1
      saikuro: complexity is 1.0
      rcov: uncovered code is 0.0%
  - location:
      class_name: Batter
      method_name: Batter#self.find_all_by_team_and_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all_by_team_and_year"]'
      simple_method_name: "#self.find_all_by_team_and_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#self.find_all_by_league_and_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all_by_league_and_year"]'
      simple_method_name: "#self.find_all_by_league_and_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#self.find_all_by_year
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find_all_by_year"]'
      simple_method_name: "#self.find_all_by_year"
    details:
      saikuro: complexity is 2.0
  - location:
      class_name: Batter
      method_name: Batter#batter_data
      file_path: lib/batter.rb:120
      file_name: lib/batter.rb
      line_number: '120'
      hash_key: '["lib/batter.rb:120", "Batter", "Batter#batter_data"]'
      simple_method_name: "#batter_data"
    details:
      flog: complexity is 1.3
      rcov: uncovered code is 0.0%
  - location:
      class_name: StatsGrinder
      method_name: StatsGrinder#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "StatsGrinder", "StatsGrinder#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 1.1
  - location:
      class_name: Batboy
      method_name: Batboy#none
      file_path: 
      file_name: 
      line_number: 
      hash_key: '[nil, "Batboy", "Batboy#none"]'
      simple_method_name: "#none"
    details:
      flog: complexity is 1.1
  - location:
      class_name: Batter
      method_name: Batter#self.first
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.first"]'
      simple_method_name: "#self.first"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.batter_data
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.batter_data"]'
      simple_method_name: "#self.batter_data"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.batting_data_keys
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.batting_data_keys"]'
      simple_method_name: "#self.batting_data_keys"
    details:
      saikuro: complexity is 1.0
  - location:
      class_name: Batter
      method_name: Batter#self.find
      file_path: lib/batter.rb
      file_name: lib/batter.rb
      line_number: 
      hash_key: '["lib/batter.rb", "Batter", "Batter#self.find"]'
      simple_method_name: "#self.find"
    details:
      saikuro: complexity is 1.0
